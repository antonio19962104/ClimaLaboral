
@using Newtonsoft.Json
@model ML.ClimaDinamico
@{
//List<ML.Preguntas> data = new List<ML.Preguntas>();
//data.AddRange(JsonConvert.SerializeObject());
}
@{
    Layout = "~/Views/ClimaDinamico/Layout.cshtml";
    ViewBag.Title = "Encuesta";
}
<script>
    var objEmpleadoRes = @Html.Raw(JsonConvert.SerializeObject(new ML.ClimaDinamico()));
</script>
@{
    <div class="row main-content-likert" style="padding-bottom: 120px;" ng-init="vm.getPreguntasByEncuesta()">
        <div class="row col-xl-12" style="margin-right: auto; margin-left: auto; margin-bottom: 4rem" ng-show="vm.surveySection <= vm.totalSecciones - 1">
            <!--<div class="col-xs-12 col-sm-12 col-md-12 col-lg-8 col-xl-8">
                <p class="instrucciones-likert text-justify">{{ vm.likertInstruccion1 }}</p>
                <p class="instrucciones-likert text-justify">{{ vm.likertInstruccion2 }}</p>
            </div>-->
            @Html.Raw(Model.htmlCodeInstrucciones)
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
                <div class="col-xs-6 col-sm-12 col-md-6 col-lg-6 col-xl-6 header-enfoque text-center header-1">
                    <p class="txt-ea">{{ vm.enfoqueB }}</p>
                    <p class="txt-ee">{{ vm.enfoqueA }}</p>
                </div>
                <div class="col-xs-6 col-sm-12 col-md-6 col-lg-6 col-xl-6 header-enfoque text-center header-2">
                    <p class="txt-ee">{{ vm.enfoqueA }}</p>
                    <p class="txt-ea">{{ vm.enfoqueB }}</p>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 separador-separador offset-lg-8 offset-xl-8 metrica">
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(241, 90, 36);"><p>{{ vm.val5 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(247, 147, 30);"><p>{{ vm.val4 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: #cccc01;"><p>{{ vm.val3 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(140, 198, 63);"><p>{{ vm.val2 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(57, 181, 74);"><p>{{ vm.val1 }}</p></div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 separador-separador offset-lg-10 offset-xl-10 metrica metricaEA">
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(241, 90, 36);"><p>{{ vm.val5 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(247, 147, 30);"><p>{{ vm.val4 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: #cccc01;"><p>{{ vm.val3 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(140, 198, 63);"><p>{{ vm.val2 }}</p></div>
                <div class="likert-values col-xs-12 col-sm-12 col-lg-2 col-xl-2" style="background-color: rgb(57, 181, 74);"><p>{{ vm.val1 }}</p></div>
            </div>
        </div>
        <div class="row col-xl-12" style="margin-bottom: 2rem;" ng-show="vm.surveySection == vm.totalSecciones - 1 || vm.surveySection == vm.totalSecciones">
            <p class="instrucciones-likert">{{ vm.likertInstruccion1 }}</p>
        </div>

        <!--likert-->
        <div ng-if="item.IdentificadorTipoControl == 12" class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mergePreguntas align-middle dataPregunta_{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" tipoOrden="{{ vm.listPreguntas[$index].IdTipoOrden }}" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idOrden="{{ vm.listPreguntas[$index].IdOrden }}" idCompetencia="{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" nombreCompetencia="{{ vm.listPreguntas[$index].Competencia.Nombre }}" idPregunta="{{ item.IdPregunta }}" ng-repeat="item in vm.listPreguntas track by $index" ng-class="{'bg-color': $index % 2 != 0}" style="" idConsecutivo="{{ $index + 1 }}">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-8 col-xl-8" style="margin-bottom: 8px; padding-top: 5px;">
                <!--<p class="mini-header">Empresa y jefes</p><p class="mini-header">Área y jefe directo</p>-->
                <span class="span-competencia">{{ item.Competencia.Nombre }}</span><br class="salto-compe" />
                {{ item.IdPregunta }}.- {{ item.Pregunta }}
            </div>
            <div id="EnfE" class="col-xs-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 EE" style="padding-top: 8px;">
                <!--<p class="mini-header">Empresa y jefes</p>-->
                <div id="div_{{ $index }}_EE" class="col-12 dem" style="display: inline-flex;">
                    <input ng-repeat="elem in vm.objValores track by $index"
                           name="Pregunta-EE-{{item.IdPregunta}}"
                           type="radio"
                           class="likert-input-value-{{ elem.id }}"
                           value="{{ elem.value }}"
                           idPregunta="{{ item.IdPregunta }}"
                           id="rad-preg{{ item.IdPregunta }}-ee-{{ $index }}" />
                    <label class="lbl likert-value-{{ elem.id }} likert-label-value-{{ elem.id }}"
                           ng-repeat="elem in vm.objValores track by $index"
                           for="rad-preg{{ item.IdPregunta }}-ee-{{ $index }}">
                    </label>
                </div>
            </div>
            <div id="EnfA" class="col-xs-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 EA" style="padding-top: 8px;">
                <!--<p class="mini-header">Área y jefe directo</p>-->
                <!--<div id="div_{{ $index }}_EA" class="col-12 dem" style="display: inline-flex;">
                    <input ng-repeat="elem in vm.objValores track by $index"
                           name="Pregunta-EA-{{ item.IdPregunta + vm.noReactivos }}"
                           type="radio"
                           class="likert-input-value-{{ elem.id }}"
                           idPregunta="{{ item.IdPregunta + vm.noReactivos }}"
                           value="{{ elem.value }}"
                           id="rad-preg{{ item.IdPregunta + vm.noReactivos }}-ea-{{ $index }}" />
                    <label class="lbl likert-value-{{ elem.id }} likert-label-value-{{ elem.id }}"
                           ng-repeat="elem in vm.objValores track by $index"
                           for="rad-preg{{ item.IdPregunta + vm.noReactivos }}-ea-{{ $index }}">
                    </label>
                </div>-->
                <div id="div_{{ $index }}_EA" class="col-12 dem" style="display: inline-flex;">
                    <input ng-repeat="elem in vm.objValores track by $index"
                           name="Pregunta-EA-{{ item.IdPregunta + 1 }}"
                           type="radio"
                           class="likert-input-value-{{ elem.id }}"
                           idPregunta="{{ item.IdPregunta + 1 }}"
                           value="{{ elem.value }}"
                           id="rad-preg{{ item.IdPregunta + 1 }}-ea-{{ $index }}" />
                    <label class="lbl likert-value-{{ elem.id }} likert-label-value-{{ elem.id }}"
                           ng-repeat="elem in vm.objValores track by $index"
                           for="rad-preg{{ item.IdPregunta + 1 }}-ea-{{ $index }}">
                    </label>
                </div>
            </div>
        </div>


        <!--Respuesta larga-->
        <div ng-if="item.IdentificadorTipoControl == 2" class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 bg-color mergePreguntas align-middle dataPregunta_{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" tipoOrden="{{ vm.listPreguntas[$index].IdTipoOrden }}" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idOrden="{{ vm.listPreguntas[$index].IdOrden }}" idCompetencia="{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" nombreCompetencia="{{ vm.listPreguntas[$index].Competencia.Nombre }}" idPregunta="{{ item.IdPregunta }}" ng-repeat="item in vm.listPreguntas track by $index" idConsecutivo="{{ $index + 1 }}">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style="margin-bottom: 8px; padding-top: 5px;">
                <!--<p class="mini-header">Empresa y jefes</p><p class="mini-header">Área y jefe directo</p>-->
                <span class="span-competencia">{{ item.Competencia.Nombre }}</span><br class="salto-compe" />
                <p style="">{{ item.IdPregunta }}.- {{ item.Pregunta }}</p>
                <div id="" class="col-12 dem" style="display: inline-flex;">
                    <textarea idPregunta="{{ item.IdPregunta }}" style="width: 100%;" cols="4" name="Pregunta-textarea-EE-{{ item.IdPregunta }}"></textarea>
                </div>
            </div>
        </div>

        <!--select-->
        <div ng-if="item.IdentificadorTipoControl == 5" class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mergePreguntas align-middle dataPregunta_{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" tipoOrden="{{ vm.listPreguntas[$index].IdTipoOrden }}" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idOrden="{{ vm.listPreguntas[$index].IdOrden }}" idCompetencia="{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" nombreCompetencia="{{ vm.listPreguntas[$index].Competencia.Nombre }}" idPregunta="{{ item.IdPregunta }}" ng-repeat="item in vm.listPreguntas track by $index" idConsecutivo="{{ $index + 1 }}">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-8 col-xl-8" style="margin-bottom: 8px; padding-top: 5px;">
                <!--<p class="mini-header">Empresa y jefes</p><p class="mini-header">Área y jefe directo</p>-->
                <span class="span-competencia">{{ item.Competencia.Nombre }}</span><br class="salto-compe" />
                {{ item.IdPregunta }}.- {{ item.Pregunta }}
            </div>
            <div id="EnfE" class="col-xs-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 EE" style="padding-top: 8px;">
                <div id="" class="col-12 dem" style="display: inline-flex;">
                    <!-- select unidad de negocio -->
                    <select ng-if="item.IdPreguntaPadre == 186" id="select-list-idpreg-{{ item.IdPregunta }}" class="form-control select-unidad-negocio" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idPregunta="{{ item.IdPregunta }}" name="Pregunta-select-EE-{{ item.IdPregunta }}" onclick="getRespuestas(this)">
                        <option value="">-Selecciona-</option>
                    </select>
                    <!-- select company -->
                    <select ng-if="item.IdPreguntaPadre == 187" id="select-list-idpreg-{{ item.IdPregunta }}" class="form-control select-company hijos-unidad-negocio" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idPregunta="{{ item.IdPregunta }}" name="Pregunta-select-EE-{{ item.IdPregunta }}" onclick="getRespuestas(this)">
                        <option value="">-Selecciona-</option>
                    </select>
                    <!-- select area -->
                    <select ng-if="item.IdPreguntaPadre == 188" id="select-list-idpreg-{{ item.IdPregunta }}" class="form-control select-area hijos-unidad-negocio hijos-company" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idPregunta="{{ item.IdPregunta }}" name="Pregunta-select-EE-{{ item.IdPregunta }}" onclick="getRespuestas(this)">
                        <option value="">-Selecciona-</option>
                    </select>
                    <!-- select departamento -->
                    <select ng-if="item.IdPreguntaPadre == 189" id="select-list-idpreg-{{ item.IdPregunta }}" class="form-control select-departamento hijos-unidad-negocio hijos-company hijos-area" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idPregunta="{{ item.IdPregunta }}" name="Pregunta-select-EE-{{ item.IdPregunta }}" onclick="getRespuestas(this)">
                        <option value="">-Selecciona-</option>
                    </select>
                    <!-- select no dependiente de demografico -->
                    <select ng-if="item.IdPreguntaPadre != 186 && item.IdPreguntaPadre != 187 && item.IdPreguntaPadre != 188 && item.IdPreguntaPadre != 189" id="select-list-idpreg-{{ item.IdPregunta }}" class="form-control" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idPregunta="{{ item.IdPregunta }}" name="Pregunta-select-EE-{{ item.IdPregunta }}" onclick="getRespuestas(this)">
                        <option value="">-Selecciona-</option>
                    </select>
                </div>
            </div>
        </div>
        <!--radio-->
        <div ng-if="item.IdentificadorTipoControl == 4" class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mergePreguntas align-middle dataPregunta_{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" tipoOrden="{{ vm.listPreguntas[$index].IdTipoOrden }}" idPreguntaPadre="{{ item.IdPreguntaPadre }}" idOrden="{{ vm.listPreguntas[$index].IdOrden }}" idCompetencia="{{ vm.listPreguntas[$index].Competencia.IdCompetencia }}" nombreCompetencia="{{ vm.listPreguntas[$index].Competencia.Nombre }}" idPregunta="{{ item.IdPregunta }}" ng-repeat="item in vm.listPreguntas track by $index" ng-class="{'bg-color': $index % 2 != 0}" style="" idConsecutivo="{{ $index + 1 }}">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-8 col-xl-8" style="margin-bottom: 8px; padding-top: 5px;">
                <span class="span-competencia">{{ item.Competencia.Nombre }}</span><br class="salto-compe" />
                {{ item.IdPregunta }}.- {{ item.Pregunta }}
            </div>
            <div id="EnfE" class="col-xs-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 EE" style="padding-top: 8px;">
                <div id="merge-rb-{{ item.IdPregunta }}" class="col-12 dem radio-simple" style="display: inline-flex;">
                    {{ vm.getContentRadioButton(item.IdPregunta) }}
                    @*<input name="preg-rb-{{ item.IdPregunta }}" itemid="rb-{{ item.IdPregunta }}" idPregunta="{{ item.IdPregunta }}" class="perm" id="rb-si" type="radio" value="Si" /> <p for="rb-si"> Si</p>
                        <input name="preg-rb-{{ item.IdPregunta }}" itemid="rb-{{ item.IdPregunta }}" idPregunta="{{ item.IdPregunta }}" style="margin-left: 2rem;" class="perm" id="rb-no" type="radio" value="No" /> <p for="rb-no"> No</p>*@
                </div>
            </div>
        </div>
        <!--merge preguntas-->
        <!--botones-->
        <div class="row col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style="height: 2.8rem; margin-left: auto; margin-right: auto; margin-top: 20px">
            <div class="col-10 col-xs-10 col-sm-10 col-md-3 col-lg-3 col-xl-3 progreso" style="padding-left: 0px; padding-right: 0px;">
                <div class="progress-clima" style="width: 100%; height: 2.8rem; text-align:center">
                    <p class="txt-progreso" style="margin-left: 0.5rem;">PROGRESO {{ vm.progreso }}%</p>
                </div>
            </div>
            <div ng-show="vm.surveySection < vm.totalSecciones" id="center" class="col-8 col-xs-8 col-sm-7 col-md-6 col-lg-6 col-xl-6 center-vertically center-buttons">
                <div ng-click="vm.prev()" title="Regresar" class="btn-clima-bottom" id="prev"></div>
                <div id="paginado"><span>{{ vm.surveySection }}/</span><span class="total-secciones"></span></div><!--se usa totalSecciones + 2 por la seccion de abiertas y demografico-->
                <div ng-click="vm.saveSeccion(0)" title="Avanzar" class="btn-clima-bottom" id="next"></div>
            </div>
            <div ng-show="vm.surveySection == vm.seccionesTotales" id="center" class="col-8 col-xs-8 col-sm-7 col-md-6 col-lg-6 col-xl-6 center-vertically center-buttons">
                <div ng-click="vm.saveSeccion(2)" id="paginado" class="btn-enviar">Enviar</div><!--se usa totalSecciones + 2 por la seccion de abiertas y demografico-->
            </div>
            <div class="col-4 col-xs-4 col-sm-4 col-md-3 col-lg-3 col-xl-3 center-vertically">
                <img ng-show="vm.surveySection < vm.totalSecciones" ng-click="vm.saveSeccion(1)" title="Guardar mi avance" class="btn-clima-bottom" src="~/img/ClimaDinamico/saveAvance.png" width="35" height="30" style="margin-right: 2rem;" />
                <img ng-show="vm.surveySection == vm.totalSecciones" ng-click="vm.prev()" title="Regresar" class="btn-clima-bottom" src="~/img/ClimaDinamico/prev.png" style="margin-right: 2rem;" width="35" height="30">
                <img ng-click="" title="" class="btn-clima-bottom" src="~/img/ClimaDinamico/mail.png" width="35" height="30" />
            </div>
        </div>
        <!--botones-->
    </div>
    <script>
            function selectExistValue(id, value) {
                var options = document.getElementById(id).options;
                var exist = false;
                [].forEach.call(options, function (elem) {
                    if (parseInt(elem.value) == value)
                        exist = true;
                });
                return exist;
            }
            var list = [186,187,188,189];
            function getRespuestas(e) {
                $(".select-unidad-negocio").change(function () {
                    $(".hijos-unidad-negocio").find('option').remove();
                    $(".hijos-unidad-negocio").append("<option value=''>-Selecciona-</option>");
                });
                $(".select-company").change(function () {
                    $(".hijos-company").find('option').remove();
                    $(".hijos-company").append("<option value=''>-Selecciona-</option>");
                });
                $(".select-area").change(function () {
                    $(".hijos-area").find('option').remove();
                    $(".hijos-area").append("<option value=''>-Selecciona-</option>");
                });
                var value = 0;
                if (e.options.length <= 1) {
                    document.getElementsByClassName("busy")[0].style.display = "block";
                    var IdPreguntaPadre = e.attributes.idPreguntaPadre.value;
                    var select = $("select");
                    if (IdPreguntaPadre == 186) {
                        $.ajax({
                            url: '/ClimaDinamico/GetUnidadesNegocio/?IdPregunta=' + IdPregunta,
                            type: 'GET',
                            success: function (response) {
                                console.log(response);
                                $("#" + e.id).find('option').not(':first').remove();
                                [].forEach.call(response, function (elem) {
                                    if (elem.Descripcion != "EmpRes"){
                                        $("#" + e.id).append("<option value=" + elem.IdCompanyCategoria + ">"+ elem.Descripcion +"</option>");
                                    }
                                    else{
                                        document.getElementById(e.id).value = elem.IdCompanyCategoria;
                                        value = elem.IdCompanyCategoria;
                                    }
                                });
                                $("#" + e.id).blur();
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                document.getElementById(e.id).value = value;
                                if (value == 0)
                                    document.getElementById(e.id).value = "";
                                // si el select con sus nuevas opciones no incluye el valor de value entonces dejar con valor de ""
                                if (value != 0 && !selectExistValue(e.id, value))
                                    document.getElementById(e.id).value = "";
                            },
                            error: function (err) {
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                swal.fire("Ocurrió un error al consultar las respuestas", err, "error");
                            }
                        });
                    }
                    if (IdPreguntaPadre == 187) {
                        var elem = Enumerable.From(select).Where(o => o.attributes.idPreguntaPadre.value == 186).FirstOrDefault();
                        $.ajax({
                            url: '/ClimaDinamico/GetCompanies/?IdCompanyCategoria=' + elem.value,
                            type: 'GET',
                            success: function (response) {
                                console.log(response);
                                $("#" + e.id).find('option').not(':first').remove();
                                [].forEach.call(response, function (elem) {
                                    if (elem.CompanyName != "EmpRes"){
                                        $("#" + e.id).append("<option value=" + elem.CompanyId + ">"+ elem.CompanyName +"</option>");
                                    }
                                    else{
                                        document.getElementById(e.id).value = elem.CompanyId;
                                        value = elem.CompanyId;
                                    }
                                });
                                $("#" + e.id).blur();
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                document.getElementById(e.id).value = value;
                                if (value == 0)
                                    document.getElementById(e.id).value = "";
                                // si el select con sus nuevas opciones no incluye el valor de value entonces dejar con valor de ""
                                if (value != 0 && !selectExistValue(e.id, value))
                                    document.getElementById(e.id).value = "";
                            },
                            error: function (err) {
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                swal.fire("Ocurrió un error al consultar las respuestas", err, "error");
                            }
                        });
                    }
                    if (IdPreguntaPadre == 188) {
                        var elem = Enumerable.From(select).Where(o => o.attributes.idPreguntaPadre.value == 187).FirstOrDefault();
                        $.ajax({
                            url: '/ClimaDinamico/GetAreas/?CompanyId=' + elem.value,
                            type: 'GET',
                            success: function (response) {
                                console.log(response);
                                $("#" + e.id).find('option').not(':first').remove();
                                [].forEach.call(response, function (elem) {
                                    if (elem.Nombre != "EmpRes") {
                                        $("#" + e.id).append("<option value=" + elem.IdArea + ">"+ elem.Nombre +"</option>");
                                    }
                                    else {
                                        document.getElementById(e.id).value = elem.IdArea;
                                        value = elem.IdArea;
                                    }
                                });
                                $("#" + e.id).blur();
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                document.getElementById(e.id).value = value;
                                if (value == 0)
                                    document.getElementById(e.id).value = "";
                                // si el select con sus nuevas opciones no incluye el valor de value entonces dejar con valor de ""
                                if (value != 0 && !selectExistValue(e.id, value))
                                    document.getElementById(e.id).value = "";
                            },
                            error: function (err) {
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                swal.fire("Ocurrió un error al consultar las respuestas", err, "error");
                            }
                        });
                    }
                    if (IdPreguntaPadre == 189) {
                        var elem = Enumerable.From(select).Where(o => o.attributes.idPreguntaPadre.value == 188).FirstOrDefault();
                        $.ajax({
                            url: '/ClimaDinamico/GetDepartamentos/?IdArea=' + elem.value,
                            type: 'GET',
                            success: function (response) {
                                console.log(response);
                                $("#" + e.id).find('option').not(':first').remove();
                                [].forEach.call(response, function (elem) {
                                    if (elem.Nombre != "EmpRes"){
                                        $("#" + e.id).append("<option value=" + elem.IdDepartamento + ">"+ elem.Nombre +"</option>");
                                    }
                                    else {
                                        document.getElementById(e.id).value = elem.IdDepartamento;
                                        value = elem.IdDepartamento;
                                    }
                                    if (response.length == 1) {
                                        $("#" + e.id).append("<option value='0'>-</option>");
                                        document.getElementById(e.id).value = 0;
                                    }
                                });
                                $("#" + e.id).blur();
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                document.getElementById(e.id).value = value;
                                if (value == 0)
                                    document.getElementById(e.id).value = "";
                                // si el select con sus nuevas opciones no incluye el valor de value entonces dejar con valor de ""
                                if (value != 0 && !selectExistValue(e.id, value))
                                    document.getElementById(e.id).value = "";
                            },
                            error: function (err) {
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                swal.fire("Ocurrió un error al consultar las respuestas", err, "error");
                            }
                        });
                    }

                    if (list.includes(parseInt(IdPreguntaPadre)) == false) {
                        document.getElementsByClassName("busy")[0].style.display = "block";
                        var IdPregunta = e.attributes.idpregunta.value;
                        $.ajax({
                            url: '/ClimaDinamico/GetRespuestasByIdPregunta/?IdPregunta=' + IdPregunta + "&IdEncuesta=" + localStorage.getItem("idEncuesta"),
                            type: 'GET',
                            success: function (response) {
                                console.log(response);
                                $("#" + e.id).find('option').not(':first').remove();
                                [].forEach.call(response, function (elem) {
                                    if (elem.Respuesta != "EmpRes"){
                                        $("#" + e.id).append("<option value=" + elem.IdRespuesta + ">"+ elem.Respuesta +"</option>");
                                    }
                                    else { // set respuesta
                                        document.getElementById(e.id).value = elem.IdRespuesta;
                                        value = elem.IdRespuesta;
                                    }
                                });
                                $("#" + e.id).blur();
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                document.getElementById(e.id).value = value;
                                if (value == 0)
                                    document.getElementById(e.id).value = "";
                            },
                            error: function (err) {
                                document.getElementsByClassName("busy")[0].style.display = "none";
                                swal.fire("Ocurrió un error al consultar las respuestas", err, "error");
                            }
                        });
                    }
                }
            }

            function createCSSSelector(selector, style) {
                if (!document.styleSheets) return;
                if (document.getElementsByTagName('head').length == 0) return;

                var styleSheet, mediaType;

                if (document.styleSheets.length > 0) {
                    for (var i = 0, l = document.styleSheets.length; i < l; i++) {
                        if (document.styleSheets[i].disabled)
                            continue;
                        var media = document.styleSheets[i].media;
                        mediaType = typeof media;

                        if (mediaType === 'string') {
                            if (media === '' || (media.indexOf('screen') !== -1)) {
                                styleSheet = document.styleSheets[i];
                            }
                        }
                        else if (mediaType == 'object') {
                            if (media.mediaText === '' || (media.mediaText.indexOf('screen') !== -1)) {
                                styleSheet = document.styleSheets[i];
                            }
                        }

                        if (typeof styleSheet !== 'undefined')
                            break;
                    }
                }

                if (typeof styleSheet === 'undefined') {
                    var styleSheetElement = document.createElement('style');
                    styleSheetElement.type = 'text/css';
                    document.getElementsByTagName('head')[0].appendChild(styleSheetElement);

                    for (i = 0; i < document.styleSheets.length; i++) {
                        if (document.styleSheets[i].disabled) {
                            continue;
                        }
                        styleSheet = document.styleSheets[i];
                    }

                    mediaType = typeof styleSheet.media;
                }

                if (mediaType === 'string') {
                    for (var i = 0, l = styleSheet.rules.length; i < l; i++) {
                        if (styleSheet.rules[i].selectorText && styleSheet.rules[i].selectorText.toLowerCase() == selector.toLowerCase()) {
                            styleSheet.rules[i].style.cssText = style;
                            return;
                        }
                    }
                    styleSheet.addRule(selector, style);
                }
                else if (mediaType === 'object') {
                    var styleSheetLength = (styleSheet.cssRules) ? styleSheet.cssRules.length : 0;
                    for (var i = 0; i < styleSheetLength; i++) {
                        if (styleSheet.cssRules[i].selectorText && styleSheet.cssRules[i].selectorText.toLowerCase() == selector.toLowerCase()) {
                            styleSheet.cssRules[i].style.cssText = style;
                            return;
                        }
                    }
                    styleSheet.insertRule(selector + '{' + style + '}', styleSheetLength);
                }
            }
            $(document).ready(function () {
                @*if (@empleado != "") {*@
                    document.getElementsByClassName("busy")[0].classList.remove("loadInvisible");
                    document.getElementsByClassName("busy")[0].classList.add("loadVisible");
                //}
            });
            function getUID() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
            $(window).resize(function () {
                try {
                var space = (document.getElementById("div_0_EE").offsetWidth - 130); // restar padding y los 20px de cada radio
                if (space <= 0) {
                    space = (document.getElementById("div_8_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_16_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_24_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_32_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_40_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_48_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_56_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_64_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_72_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_80_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_88_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_96_EE").offsetWidth - 130);
                }
                if (space <= 0) {
                    space = (document.getElementById("div_104_EE").offsetWidth - 130);
                }
                space = space / 4; // entre los 4 margin-left
                createCSSSelector('label + label', 'margin-left:' + space + "px !important");
                } catch (e) {
                    console.log(e);
                }
            });
    </script>
        <style>
            input.perm {
                opacity: 1 !important;
                position: inherit !important;
                pointer-events: all !important;
            }

            .perm + .perm {
                margin-left: 2rem !important;
            }

            textarea {
                resize: none;
            }

            .btn-enviar {
                background-color: #000080;
                color: #fff !important;
                text-align: center;
                height: 2.4rem;
                padding-top: 0.2rem;
                border-radius: 5px;
                cursor: pointer;
            }

            .likert-label-value-5 {
                width: 20px;
                height: 20px;
                border: 3px solid rgb(241, 90, 36);
                border-radius: 50%;
            }

            .likert-label-value-4 {
                width: 20px;
                height: 20px;
                border: 3px solid rgb(247, 147, 30);
                border-radius: 50%;
            }

            .likert-label-value-3 {
                width: 20px;
                height: 20px;
                border: 3px solid rgb(204, 204, 1);
                border-radius: 50%;
            }

            .likert-label-value-2 {
                width: 20px;
                height: 20px;
                border: 3px solid rgb(140, 198, 63);
                border-radius: 50%;
            }

            .likert-label-value-1 {
                width: 20px;
                height: 20px;
                border: 3px solid rgb(57, 181, 74);
                border-radius: 50%;
            }

            input[type=radio] {
                opacity: 0;
                position: fixed;
                pointer-events: none;
            }

            label + label {
                margin-left: 10px;
            }


            /*.custom-control-input:checked ~ .custom-control-label::before {
                color: #fff;
                border-color: red;
                background-color: red;
            }*/


            .span-competencia {
                background-color: #000080;
                border-radius: 2px;
                color: #fff;
                padding: 3px;
                font-weight: bold;
                vertical-align: middle;
            }

            .mini-header {
                margin-bottom: 0px;
                text-align: center;
                background-color: #000080;
                color: #fff;
                font-weight: bold;
                border: 1px solid #fff;
            }

            #prev {
                background-image: url(../../img/ClimaDinamico/prev.png);
                background-size: cover;
                width: 35px;
                height: 30px;
            }

            #paginado {
                color: rgb(0, 0, 128);
                font-weight: bold;
                padding-left: 15px;
                padding-right: 15px;
                font-size: 22px;
                font-family: Arial, Helvetica, sans-serif;
            }

            #next {
                background-image: url(../../img/ClimaDinamico/next.png);
                background-size: cover;
                width: 35px;
                height: 30px;
            }

            .progreso {
                border: 3px solid rgb(0, 0, 128);
                border-radius: 7px;
                font-weight: bold;
                font-family: Arial, Helvetica, sans-serif;
                margin-left: auto;
                margin-right: auto;
            }

            .center-buttons {
                margin-left: auto;
                margin-right: auto;
                margin-top: 5px;
            }

            .btn-clima-bottom {
                cursor: pointer;
            }
        </style>
    /*}*/
}
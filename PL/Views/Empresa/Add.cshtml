@model ML.Company
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Admin/Contenido.cshtml";
}
<script>
    function tipoEmpresa() {
        var tipoEmpresa = ($('input:radio[name=TipoEmpresa]:checked').val());
        
        if (tipoEmpresa == 'Interna') {
            $('#selectUNegocio').css('display', 'block');
        }
        else if (tipoEmpresa == 'Externa') {
            $('#selectUNegocio').css('display', 'none');
        }
    }
</script>
<link href="~/css/swiper.min.css" rel="stylesheet" />
<link href="~/css/summernote.min.css" rel="stylesheet" />


@*<section id="page-title">
    <div class="container-fluid px-lg-5">
        <img class="img-fluid" src="~/img/icon-enterprises.png"> <h1 class="title-page-survey">Empresa / <span>Crear</span></h1>
    </div>.container-fluid
</section>*@

@section H1
    {
    <section id="page-title">
        <div class="container-fluid px-lg-5">
            <div class="row">
                <div class="col-sm-6 bottom-align-left center-vertically-xs">
                    <img class="img-fluid img-page-title" src="~/img/icon-enterprises.png"> <h1 class="title-page-survey">Empresa / <span>Crear</span></h1>
                </div>
            </div>
        </div><!--.container-fluid-->
    </section>
}



<div class="content-wrap">
    <div class="container-fluid px-lg-5">
        <div class="row">

            <div class="col-lg-8 offset-lg-2">

                            <ul class="nav nav-tabs mb-4" id="tabSurvey" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="prev-tab" data-toggle="tab" href="#prev" role="tab" aria-controls="prev" aria-selected="true">Datos generales</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="manag-tab" data-toggle="tab" href="#manag" role="tab" aria-controls="manag" aria-selected="false">Logo</a>
                                </li>
                               
                            </ul>


                <div class="tab-content" id="tabSurveyContent">
                    <div class="tab-pane fade show active" id="prev" role="tabpanel" aria-labelledby="prev-tab">
                        <div class="section-survey shadow-sm animated fadeInUp">
                            <div class="body-survey">
                                <div class="row">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-horizontal" onclick="tipoEmpresa()">
                                            <div class="form-group">
                                                <label class="control-label">Selecciona el tipo de empresa</label>
                                                <div class="col-md-5 col-sm-5">
                                                    <input type="radio" name="TipoEmpresa" value="Interna" /> Interna
                                                    <input type="radio" name="TipoEmpresa" value="Externa" /> Externa
                                                </div>
                                            </div>
                                        </div>


                                        <div class="form-horizontal" id="selectUNegocio">
                                            <div class="form-group">
                                                <label class="control-label">Unidad de Negocio</label>
                                                <div class="col-md-5 col-sm-5">
                                                    @Html.DropDownListFor(model => model.CompanyCategoria.ListCompanyCategoria, new SelectList(Model.CompanyCategoria.ListCompanyCategoria, "IdCompanyCategoria", "Descripcion"), "Selecciona una respuesta  ", new { @id = "DDLUNegocio", @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>


                                        <div class="form-horizontal" id="">
                                            <div class="form-group">
                                                <label class="control-label">Nombre de la empresa</label>
                                                <div class="col-md-5 col-sm-5" id="mergeValidacion">
                                                    @Html.TextBoxFor(model => model.CompanyName, htmlAttributes: new { @style = "background-color:#ffffff;", @class = "form-control", @id = "TxtNombreEmpresa", @placeholder = "Nombre empresa", @onkeyup = "validaDuplicadoEmpresa()" })
                                                </div>
                                            </div>
                                        </div>







                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                @Html.Label("Estatus", new { @class = "control-label" })
                                                <div class="col-md-5 col-sm-5">
                                                    <select name="Estatus" id="Estatus" class="form-control">
                                                        <option value="0">Selecciona una respuesta</option>
                                                        <option value="1">Activo</option>
                                                        <option value="2">Desactivado</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="manag" role="tabpanel" aria-labelledby="prev-tab">
                        <div class="section-survey shadow-sm animated fadeInUp">
                            <div class="body-survey">
                                <div class="row">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label">Logo de la empresa</label>
                                                <div class="col-md-3 col-sm-5">
                                                    <input onchange="encodeImageFileAsURL(this)" id="logoEmpresa" type="file" name="logo" value="" accept="image/*" />
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label">Logo de la empresa</label>
                                                <div class="col-md-3 col-sm-5">
                                                    <input id="img" type="image" name="name" value="" src="" style="width:100px; height:100px;" />
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label">Color de la empresa</label>
                                                <div class="col-md-3 col-sm-5">
                                                    @*<input id="color" class="color-picker" value="#000000" data-huebee />*@
                                                    <input type="color" id="color" name="favcolor" value="#ff0000" style="width:50%;">
                                                    @*<button class="color-picker" data-huebee>Select A Color</button>*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> 


                


                


                <div class="row" style="display:block;">
                    <div class="col-md-2">
                        <input type="submit" name="Guardar" value="Guardar" class="btn btn-success" onclick="return validarCampos();" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@*data-toggle="modal" data-target="#modalEdit"*@
<script src="~/scripts/jquery-3.4.1.min.js"></script>
<script src="~/scripts/summernote/bootstrap.js" type="text/javascript"></script>
<script src="~/scripts/summernote/summernote.js" type="text/javascript"></script>
<script src="~/css/sweetalert.min.js"></script>
<script>
    function validaDuplicadoEmpresa() {
        var nombreNewEmpresa = $('#TxtNombreEmpresa').val();
        nombreNewEmpresa = nombreNewEmpresa.toUpperCase();
        //Revisar en la lista que no exista
        var existe = false;

        for (var i = 0; i < listEmpresas.length; i++) {
            if (listEmpresas[i] == nombreNewEmpresa) {
                existe = true;
                $('#msg').remove();
                $('#mergeValidacion').append('<span id="msg" style="color:red">Ya existe una empresa con este nombre</span>');
                $(':input[type="submit"]').prop('disabled', true);
            }
        }

        if (existe == false) {
            $('#msg').remove();
            $(':input[type="submit"]').prop('disabled', false);
        }

    }
</script>

<script>
    var listEmpresas = [];
    var listAreas = [];
    function validarCampos() {
        var nombre = $('#TxtNombreEmpresa').val();
        var UNegocio = $('#DDLUNegocio').val();
        var Estatus = $('#Estatus').val();
        var color = $('#color').val();

        var imagenB64 = $('#img').attr('src');



        if (nombre == null || nombre == "" ||
            Estatus == 0 || Estatus == "0" ||
            imagenB64 == null || imagenB64 == "" || color == null || color == "") {
            swal('Debes llenar todos los campos', '', 'info');
            return false;
        }
        else {
            var tipoEmpresa = ($('input:radio[name=TipoEmpresa]:checked').val());
            let ModelEmpresa = null;
            if (tipoEmpresa == 'Interna') {
                ModelEmpresa = {
                    companyCategoria: { IdCompanyCategoria: UNegocio },
                    companyName: nombre,
                    tipoEstatus: { idEstatus: Estatus },
                    logoEmpresa: imagenB64,
                    color: color,
                    tipoEmpresa: 'Interna'
                };
            }
            else if (tipoEmpresa == 'Externa') {
                ModelEmpresa = {
                    companyCategoria: { IdCompanyCategoria: 10 },
                    companyName: nombre,
                    tipoEstatus: { idEstatus: Estatus },
                    logoEmpresa: imagenB64,
                    color: color,
                    tipoEmpresa: 'Externa'
                };
            }

            var isValid = false;
            if ((tipoEmpresa == 'Interna' && UNegocio == 0) || (tipoEmpresa == 'Interna' && UNegocio == "")) {
                isValid = false;
            }
            if ((tipoEmpresa == 'Interna' && UNegocio != 0) || (tipoEmpresa == 'Interna' && UNegocio != "")) {
                isValid = true;
            }
            if (tipoEmpresa == 'Externa') {
                isValid = true;
            }

            var MLCompany = JSON.stringify(ModelEmpresa);

            if (isValid == true) {
                //Call ajax
                $.ajax({

                    type: 'POST',
                    data: MLCompany, traditional: true,
                    url: '@Url.Action("Add", "Empresa")',
                    contentType: 'application/json; charset=utf-8',
                    complete: function (Response) {
                        if (Response.responseJSON == "success") {
                            swal({
                                title: "La empresa se registró correctamente",
                                text: "",
                                type: "success",
                                icon: "success",
                            }).then(function () {
                                window.location = "GetAll";
                            });
                        }
                        else if (Response.responseJSON == "error") {
                            swal("Ocurrió un error al registrar la empresa", "", "error");
                        }
                    }
                });
            }
            else {
                swal('Debes elegir una unidad de negocio', '', 'info');
            }
        }
    }
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    //function toDataURL(url, callback) {
    //    var xhr = new XMLHttpRequest();
    //    xhr.onload = function () {
    //        var reader = new FileReader();
    //        reader.onloadend = function () {
    //            callback(reader.result);
    //        }
    //        reader.readAsDataURL(xhr.response);
    //    };
    //    xhr.open('GET', url);
    //    xhr.responseType = 'blob';
    //    xhr.send();
    //}
    function closeModal() {
        $('#modalAdd').css('display', 'none');
        $('#modalAdd').removeClass('show');
        $('#modalAdd').removeProp('padding-right', '15px');
        $('#modalAdd').removeProp('aria-modal', true);
    }

    $(document).ready(function () {
        
        //padding-right: 15px;" 
        //aria-modal="true">
        $('#color').val('');
        $('#color').css('background-color', 'white');

        $('#DDLUNegocio').append(
                '<option value="Add" data-toggle="modal" data-target="#modalAdd">+ Agregar unidad de negocio</option>'
            );
        $('#DDLUNegocio').change(function () {
            if ($('#DDLUNegocio').val() == "Add") {
                $('#modalAdd').css('display', 'block');
                $('#modalAdd').addClass('show');
                $('#modalAdd').css('padding-right', '15px');
                $('#modalAdd').prop('aria-modal', true);
            }
        });
    });

    function encodeImageFileAsURL(element) {
        var file = element.files[0];
        var reader = new FileReader();
        reader.onloadend = function () {
            console.log(reader.result)
            $('#img').prop('src', reader.result);
        }
        reader.readAsDataURL(file);
    }

</script>

<link rel="stylesheet" href="https://unpkg.com/huebee@latest/dist/huebee.min.css" />
<script src="/path/to/cdn/jquery.slim.min.js"></script>
<script src="https://unpkg.com/huebee@latest/dist/huebee.pkgd.min.js"></script>
<script>
    var colorPicker = new Huebee( '.color-picker', {
        customColors: [ '#efefef' ]
    });
    var colorPicker = new Huebee('.color-picker', {

        // the number of hues
        hues: 12,

        // the first hue
        hue0: 0,

        // the number of shades
        shades: 5,

        // the number of sets of saturation
        saturations: 3,

        // or "hex", "hsl"
        notation: 'shortHex',

        // applies color to text
        setText: true,

        // applies color to background
        setBGColor: true,

        // shows the color picker on init
        staticOpen: false,

        // additional CSS class(es)
        className: ''

    });
    colorPicker.on('change', function (color) {
        // do something
    });

    // returns the color
    hueb.color

    // returns the hue
    hueb.hue

    // returns the saturation
    hueb.sat

    // returns the luminance
    hueb.lum

    // determines if the color is light
    hueb.isLight
</script>

@*Modal*@
<div class="wrapper-editor">
    <div class="row d-flex justify-content-center modalWrapper">
        <div class="modal fade addNewInputs" id="modalAdd" tabindex="-1" role="dialog" aria-labelledby="modalAdd"
             aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100 font-weight-bold text-primary ml-5">Agrega una nueva Unidad de Negocio</h4>
                        <button type="button" class="close text-primary" data-dismiss="modal" aria-label="Close" onclick="closeModal();">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body mx-3">
                        <div class="md-form mb-5">
                            <label data-error="wrong" data-success="right" for="inputName">Nombre de la nueva unidad de negocio:</label>
                            <input placeholder="Ingresa el nombre de la unidad de negocio" type="text" id="NombreUNEgocio" class="form-control validate Txt">
                        </div>

                    </div>
                    <div class="modal-footer d-flex justify-content-center buttonAddFormWrapper">
                        <button onclick="AddUNegocio()" class="btn btn-outline-primary btn-block buttonAdd">
                            Agregar Unidad de Negocio
                            <i class="fas fa-plus ml-1"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .modal-backdrop {
        z-index: -5 !important;
    }
</style>
<script>
    function AddUNegocio() {
        var nombre = $('#NombreUNEgocio').val();

        if (nombre == "" || nombre == null) {
            swal("Debe ingresar un nombre", "", "error");
        }
        else {

            let model = { descripcion: nombre };
            var data = JSON.stringify(model);

            $.ajax({
                url: '@Url.Action("AddUNegocio")',
                data: model,
                complete: function (Response) {
                    if (Response.responseJSON == "success") {
                        swal({
                            title: "La Unidad de Negocio se registró correctamente",
                            text: "",
                            type: "success",
                            icon: "success",
                        }).then(function () {
                            location.reload(true);
                        });
                    }
                    else {
                        swal("Ocurrió un error al registrar la Unidad de Negocio", "", "error");
                    }
                }
            });
        }
    }
</script>
<script>
    $(document).ready(function () {
        //Listar todas las Empresas y areas para validar duplicado
        $.ajax({
            url: '@Url.Action("GetAllEmpresas")',
            type: 'GET',
            data: 'company',
            complete: function (dataeMPRESA) {
                for (var i = 0; i < dataeMPRESA.responseJSON.length; i++) {
                    var nameEmpresa = dataeMPRESA.responseJSON[i].CompanyName.toUpperCase();
                    listEmpresas.push(nameEmpresa);
                }
            }
        });
        $.ajax({
            url: '@Url.Action("GetAllAreas")',
            type: 'GET',
            data: 'company',
            complete: function (dataArea) {
                for (var i = 0; i < dataArea.responseJSON.length; i++) {
                    var nameArea = dataArea.responseJSON[i].Nombre.toUpperCase();
                    listAreas.push(nameArea);
                }
            }
        });
    });
</script>
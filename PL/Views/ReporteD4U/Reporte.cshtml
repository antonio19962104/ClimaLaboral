@using Newtonsoft.Json
@model ML.Encuesta
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es-es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/bundles/cssAdmin")
    @{
        //Session["PerfilAdminLog"]
        ViewBag.Perfil = Session["PerfilAdminLog"];
    }
    @Scripts.Render("~/bundles/jqueryAdmin")
    <script>
            var usr = @Html.Raw(JsonConvert.SerializeObject(Session["AdminLog"]));
    </script>
</head>

@{
    var usr = Convert.ToString(Session["AdminLog"]);
    if (!String.IsNullOrEmpty(usr))
    {
        /* cargar sitio */
        <body>
            @Html.HiddenFor(model => model.IdEncuesta, htmlAttributes: new { id = "TxtIdEncuesta" })
            @Html.HiddenFor(model => model.Nombre, htmlAttributes: new { @id = "TxtNombreEncuesta" })
            @Html.HiddenFor(model => model.FechaInicio, htmlAttributes: new { @id = "TxtFechaInicio" })
            @Html.HiddenFor(model => model.FechaFin, htmlAttributes: new { @id = "TxtFechaFin" })
            <ul id="mySidenav" class="sidenav">
                <a href="javascript:void(0)" class="closebtn d-none" onclick="closeNav()"><i class="fas fa-arrow-left fa-lg color"></i></a>
                <span class="openbtn animated pulse slow" onclick="openNav()"><i class="fas fa-arrow-right fa-lg color"></i></span>


                <!--Seccion Permisos por usuario-->
                @{
                    //Validar permisos
                    var ActionEncuestasListar = false;
                    var ActionEncuestasCrear = false;
                    var ActionEncuestasOpc = false;

                    var ActionPlantillasListar = false;
                    var ActionPlantillasCrear = false;
                    var ActionPlantillasOpc = false;

                    var ActionReportesListar = false;
                    var ActionReportesCrear = false;
                    var ActionReportesOpc = false;

                    var ActionBDListar = false;
                    var ActionBDCrear = false;
                    var ActionBDOpc = false;

                    var ActionUsuariosListar = false;
                    var ActionUsuariosCrear = false;
                    var ActionUsuariosOpc = false;

                    var ActionEmpresasListar = false;
                    var ActionEmpresasCrear = false;
                    var chkEmpresasOpc = false;

                    var chkPlanesListar = false;
                    var chkPlanesCrear = false;
                    var chkAdminAcciones = false;

                    var session = Session["AdminLog"];
                    var sessionPerfil = Session["PerfilAdminLog"];


                    ViewBag.Permisos = Session["Permisos"];
                    ViewBag.Modulos = Session["Modulos"];
                    //Model.ObjectsPermisos = new List<object>();
                    //Model.ObjectsPermisos = ViewBag.Permisos;

                    foreach (ML.PerfilModulo item in ViewBag.Permisos)
                    {
                        if (item.Modulo.Nombre == "Encuestas" && item.PerfilModuloAccion.Accion == "ListarEncuesta")
                        {
                            ActionEncuestasListar = true;
                        }
                        if (item.Modulo.Nombre == "Encuestas" && item.PerfilModuloAccion.Accion == "CrearEncuesta")
                        {
                            ActionEncuestasCrear = true;
                        }
                        if (item.Modulo.Nombre == "Encuestas" && item.PerfilModuloAccion.Accion == "OpcEncuesta")
                        {
                            ActionEncuestasOpc = true;
                        }
                        /**********************/
                        if (item.Modulo.Nombre == "Plantillas" && item.PerfilModuloAccion.Accion == "ListarPlantilla")
                        {
                            ActionPlantillasListar = true;
                        }
                        if (item.Modulo.Nombre == "Plantillas" && item.PerfilModuloAccion.Accion == "CrearPlantilla")
                        {
                            ActionPlantillasCrear = true;
                        }
                        if (item.Modulo.Nombre == "Plantillas" && item.PerfilModuloAccion.Accion == "OpcPlantilla")
                        {
                            ActionPlantillasOpc = true;
                        }
                        /***********************************/
                        if (item.Modulo.Nombre == "Reportes" && item.PerfilModuloAccion.Accion == "ListarReporte")
                        {
                            ActionReportesListar = true;
                        }
                        if (item.Modulo.Nombre == "Reportes" && item.PerfilModuloAccion.Accion == "CrearReporte")
                        {
                            ActionReportesCrear = true;
                        }
                        if (item.Modulo.Nombre == "Reportes" && item.PerfilModuloAccion.Accion == "OpcReporte")
                        {
                            ActionReportesOpc = true;
                        }
                        /***************************************/
                        if (item.Modulo.Nombre == "Base de datos" && item.PerfilModuloAccion.Accion == "ListarBD")
                        {
                            ActionBDListar = true;
                        }
                        if (item.Modulo.Nombre == "Base de datos" && item.PerfilModuloAccion.Accion == "CrearBD")
                        {
                            ActionBDCrear = true;
                        }
                        if (item.Modulo.Nombre == "Base de datos" && item.PerfilModuloAccion.Accion == "OpcBD")
                        {
                            ActionBDOpc = true;
                        }
                        /*******************************/
                        if (item.Modulo.Nombre == "Usuarios" && item.PerfilModuloAccion.Accion == "ListarUsuario")
                        {
                            ActionUsuariosListar = true;
                        }
                        if (item.Modulo.Nombre == "Usuarios" && item.PerfilModuloAccion.Accion == "CrearUsuario")
                        {
                            ActionUsuariosCrear = true;
                        }
                        if (item.Modulo.Nombre == "Usuarios" && item.PerfilModuloAccion.Accion == "OpcUsuario")
                        {
                            ActionUsuariosOpc = true;
                        }
                        /*********************************/
                        if (item.Modulo.Nombre == "Empresas" && item.PerfilModuloAccion.Accion == "ListarEmpresa")
                        {
                            ActionEmpresasListar = true;
                        }
                        if (item.Modulo.Nombre == "Empresas" && item.PerfilModuloAccion.Accion == "CrearEmpresa")
                        {
                            ActionEmpresasCrear = true;
                        }
                        if (item.Modulo.Nombre == "Empresas" && item.PerfilModuloAccion.Accion == "OpcEmpresa")
                        {
                            chkEmpresasOpc = true;
                        }
                        if (item.Modulo.Nombre == "Planes de Acción" && item.PerfilModuloAccion.Accion == "ListarPlanes")
                        {
                            <script>
                                localStorage.setItem("ListarPlanes", true)
                            </script>
                            chkPlanesListar = true;
                        }
                        if (item.Modulo.Nombre == "Planes de Acción" && item.PerfilModuloAccion.Accion == "CrearPlanes")
                        {
                            <script>
                                localStorage.setItem("CrearPlanes", true)
                            </script>
                            chkPlanesCrear = true;
                        }
                        if (item.Modulo.Nombre == "Planes de Acción" && item.PerfilModuloAccion.Accion == "AdministrarAcciones")
                        {
                            <script>
                                localStorage.setItem("AdministrarAcciones", true)
                            </script>
                            chkAdminAcciones = true;
                        }
                    }

                    foreach (ML.PerfilModulo perf in ViewBag.Modulos)
                    {
                        ML.PerfilModulo perfilModulo = new ML.PerfilModulo();
                        perfilModulo.Modulo = new ML.Modulo();

                        perfilModulo.Modulo.Nombre = perf.Modulo.Nombre;

                        if (perfilModulo.Modulo.Nombre == "Encuestas")
                        {
                            <li id="Encuestas">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapseSurvey" aria-controls="collapseSurvey" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/icon-survey.png" alt="Icono Encuestas" class="img-white">
                                        <span class="tooltiptext">Encuestas</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapseSurvey" role="button" aria-expanded="false" aria-controls="collapseSurvey">
                                        <img src="~/img/icon-survey.png" class="img-white pr-3" alt="Icono Encuestas"> Encuestas
                                    </a>
                                </span>
                                <div class="collapse" id="collapseSurvey">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (ActionEncuestasCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Create", "Encuesta")">Crear</a></li>
                                                }
                                                if (ActionEncuestasOpc == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Load", "Encuesta")">Importar encuesta</a></li>
                                                }
                                                if (ActionEncuestasListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll", "Encuesta")">Listado</a></li>
                                                }
                                                <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("CreateCL", "Encuesta")">Crear Clima Laboral</a></li>
                                                <li style="margin-left: 20px;"><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll", "Competencia")">Competencias</a></li>
                                                <li style="margin-left: 20px;"><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll_", "Competencia")">Categorias</a></li>
                                                <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Index", "PlanesDeAccion")">Crear Plan de Acción</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                        if (perfilModulo.Modulo.Nombre == "Plantillas")
                        {
                            <li id="Plantillas">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapseTemplates" aria-controls="collapseTemplates" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/icon-template.png" alt="Icono Plantillas" class="img-white">
                                        <span class="tooltiptext">Plantillas</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapseTemplates" role="button" aria-expanded="false" aria-controls="collapseTemplates">
                                        <img src="~/img/icon-template.png" class="img-white pr-3" alt="Icono Plantillas"> Plantillas
                                    </a>
                                </span>
                                <div class="collapse" id="collapseTemplates">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (ActionPlantillasCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("creaPlantilla", "Plantillas")">Crear</a></li>
                                                }
                                                if (ActionPlantillasListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Plantillas", "Plantillas")">Listado</a></li>
                                                }
                                                if (ActionPlantillasOpc == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="#">Más opciones</a></li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                        if (perfilModulo.Modulo.Nombre == "Reportes")
                        {
                            <li id="Reportes">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapseReports" aria-controls="collapseReports" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/icon-reports.png" alt="Icono Reportes" class="img-white">
                                        <span class="tooltiptext">Reportes</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapseReports" role="button" aria-expanded="false" aria-controls="collapseReports">
                                        <img src="~/img/icon-reports.png" class="img-white pr-3" alt="Icono Reportes"> Reportes
                                    </a>
                                </span>
                                <div class="collapse" id="collapseReports">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (ActionReportesCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Add", "ReporteD4U")">Crear</a></li>
                                                }
                                                if (ActionReportesListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll", "Reporte")">Listado</a></li>
                                                }
                                                if (ActionReportesOpc == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="#">Más opciones</a></li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                        if (perfilModulo.Modulo.Nombre == "Base de datos")
                        {
                            <li id="BD">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapseDatabase" aria-controls="collapseDatabase" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/icon-database.png" alt="Icono Bases de datos" class="img-white">
                                        <span class="tooltiptext">Bases de datos</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapseDatabase" role="button" aria-expanded="false" aria-controls="collapseDatabase">
                                        <img src="~/img/icon-database.png" class="img-white pr-3" alt="Icono Bases de datos"> Bases de datos
                                    </a>
                                </span>
                                <div class="collapse" id="collapseDatabase">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (ActionBDCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Add", "BD")">Crear</a></li>
                                                }
                                                if (ActionBDListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAllForListado", "BD")">Listado</a></li>
                                                }
                                                if (ActionBDOpc == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetEliminadas", "BD")">Administrar bases de datos eliminadas</a></li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                        if (perfilModulo.Modulo.Nombre == "Usuarios")
                        {
                            <li id="Usuarios">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapseUsers" aria-controls="collapseUsers" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/icon-users.png" alt="Icono Usuarios" class="img-white">
                                        <span class="tooltiptext">Usuarios</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapseUsers" role="button" aria-expanded="false" aria-controls="collapseUsers">
                                        <img src="~/img/icon-users.png" class="img-white pr-3" alt="Icono Usuarios"> Usuarios
                                    </a>
                                </span>
                                <div class="collapse" id="collapseUsers">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (ActionUsuariosCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Add", "Administrador")">Crear</a></li>
                                                }
                                                if (ActionUsuariosListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll", "Administrador")">Listado</a></li>
                                                }
                                                if (ActionUsuariosOpc == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAllEliminados", "Administrador")">Administrar usuarios eliminadas</a></li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                        if (perfilModulo.Modulo.Nombre == "Empresas")
                        {
                            <li id="Empresas">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapseEnterprises" aria-controls="collapseEnterprises" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/icon-enterprises.png" alt="Icono Empresas" class="img-white">
                                        <span class="tooltiptext">Empresas</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapseEnterprises" role="button" aria-expanded="false" aria-controls="collapseEnterprises">
                                        <img src="~/img/icon-enterprises.png" class="img-white pr-3" alt="Icono Empresas"> Empresas
                                    </a>
                                </span>
                                <div class="collapse" id="collapseEnterprises">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (ActionEmpresasCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Add", "Empresa")">Crear</a></li>
                                                }
                                                if (ActionEmpresasListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll", "Empresa")">Listado</a></li>
                                                }
                                                if (chkEmpresasOpc == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAllEliminadas", "Empresa")">Administrar empresas eliminadas</a></li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                        if (perfilModulo.Modulo.Nombre == "Planes de Acción")
                        {
                            <li id="Planes">
                                <a onclick="openNav(this)" data-toggle="collapse" href="#collapsePlanes" aria-controls="collapsePlanes" style="padding: 0px;">
                                    <div class="item-menu-icon">
                                        <img src="~/img/plan-de-accion-2.png" alt="Icono Encuestas" class="img-white">
                                        <span class="tooltiptext">Planes de Acción</span>
                                    </div>
                                </a>
                                <span class="item-menu d-none">
                                    <a onclick="openNav(this)" data-toggle="collapse" href="#collapsePlanes" role="button" aria-expanded="false" aria-controls="collapsePlanes">
                                        <img src="~/img/plan-de-accion-2.png" class="img-white pr-3" alt="Icono Encuestas"> Planes de Acción
                                    </a>
                                </span>
                                <div class="collapse" id="collapsePlanes">
                                    <div class="card card-body py-2">
                                        <ul class="fa-ul pl-lg-4">
                                            @{
                                                if (chkPlanesListar == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetAll", "PlanesDeAccion")">Listado</a></li>
                                                }
                                                if (chkPlanesCrear == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("Create", "PlanesDeAccion")">Crear</a></li>
                                                }
                                                if (chkAdminAcciones == true)
                                                {
                                                    <li><span class="fa-li"><i class="fas fa-minus"></i></span> <a href="@Url.Action("GetEncuestas", "PlanesDeAccion")">Administrar acciones</a></li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </li>
                        }
                    }
                }
                <!--Fin seccion permisos por usuario-->



            </ul>

            <div id="main" style="margin-left: 50px;">
                <main id="wrapper" class="animate fadeIn">

                    <div id="top-bar">
                        <div class="container-fluid px-lg-5">
                            <div class="row">
                                <div class="col-6 col-sm-4 col-md-5">
                                    <img src="@Session["logo"]" class="logo-header" alt="Logo" onclick="GetDashBoard()">
                                </div>

                                <div class="col-6 col-sm-8 col-md-7">
                                    <div class="user-info">
                                        <!--<span class="color">Hola</span>--><a class="" href="@Url.Action("Login", "LoginAdmin")">Cerrar sesión</a> , @Session["AdminLog"]  @{ foreach (var item in ViewBag.Perfil)
                                            { <span class="position"> / @item  </span> } } <img src="~/img/icon-user-male.jpg" class="avatar-header" width="50" height="50" alt="Avatar">
                                    </div>
                                </div>
                            </div><!--.row-->
                        </div><!--.container-fluid-->
                    </div>

                    <section id="page-title">
                        <div class="container-fluid px-lg-5">
                            <div class="row">
                                <div class="col-sm-6 bottom-align-left center-vertically-xs">
                                    <img class="img-fluid img-page-title" src="~/img/icon-reports.png"/> <h1 class="title-page-survey">Reporte / <span>@Model.Nombre</span></h1>
                                </div>
                                <div class="col-sm-6 bottom-align-right center-vertically-xs">
                                    <a href="/Reporte/GetAll">Regresar al listado</a>
                                </div>
                            </div>
                        </div><!--.container-fluid-->
                    </section>

                    <section id="content" style="">
                        <div class="content-wrap">
                            <div class="container-fluid px-lg-5">
                                <div class="row">
                                    <div class="col-sm-6 col-md-6 col-lg-3">
                                        <div class="card mb-4 mb-md-0">
                                            <div class="card-block">
                                                <div class="row align-items-center">
                                                    <div class="col-12">
                                                        <h1 onclick="" class="text-center color mb-0" id=""><strong id="mergeEnProceso"></strong></h1>
                                                    </div>
                                                </div>
                                            </div><!--.card-block-->
                                            <div class="card-footer bg-c-orange">
                                                <div class="row align-items-center">
                                                    <div class="col-9">
                                                        <p class="text-white mb-0">En proceso</p>
                                                    </div>
                                                    <div class="col-3 text-right">
                                                        <i class="fas fa-users-friends text-white"></i>
                                                    </div>
                                                </div>
                                            </div><!--.card-footer-->
                                        </div><!--.card-->
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-3">
                                        <div class="card mb-4 mb-md-0">
                                            <div class="card-block">
                                                <div class="row align-items-center">
                                                    <div class="col-12">
                                                        <h1 class="text-center color mb-0" id=""><strong id="mergeNoComenzado"></strong></h1>
                                                    </div>
                                                </div>
                                            </div><!--.card-block-->
                                            <div class="card-footer bg-c-red">
                                                <div class="row align-items-center">
                                                    <div class="col-9">
                                                        <p class="text-white mb-0">No comenzado</p>
                                                    </div>
                                                    <div class="col-3 text-right">
                                                        <i class="fas fa-users-times text-white"></i>
                                                    </div>
                                                </div>
                                            </div><!--.card-footer-->
                                        </div><!--.card-->
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-3">
                                        <div class="card mb-4 mb-md-0">
                                            <div class="card-block">
                                                <div class="row align-items-center">
                                                    <div class="col-12">
                                                        <h1 class="text-center color mb-0" id=""><strong id="mergeTerminadas"></strong></h1>
                                                    </div>
                                                </div>
                                            </div><!--.card-block-->
                                            <div class="card-footer bg-c-green">
                                                <div class="row align-items-center">
                                                    <div class="col-9">
                                                        <p class="text-white mb-0">Terminadas</p>
                                                    </div>
                                                    <div class="col-3 text-right">
                                                        <i class="fas fa-users-check text-white"></i>
                                                    </div>
                                                </div>
                                            </div><!--.card-footer-->
                                        </div><!--.card-->
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-3">
                                        <div class="card mb-4 mb-md-0">
                                            <div class="card-block">
                                                <div class="row align-items-center">
                                                    <div class="col-12">
                                                        <h1 class="text-center color mb-0" id=""><strong id="mergeTotal"></strong></h1>
                                                    </div>
                                                </div>
                                            </div><!--.card-block-->
                                            <div class="card-footer bg-c-blue">
                                                <div class="row align-items-center">
                                                    <div class="col-9">
                                                        <p class="text-white mb-0">Total</p>
                                                    </div>
                                                    <div class="col-3 text-right">
                                                        <i class="fas fa-users text-white"></i>
                                                        <i onclick="getParticipacion();" class="fas fa-sync text-white ml-2" title="Actualizar avance de la encuesta" style="cursor: pointer;"></i>
                                                    </div>
                                                </div>
                                            </div><!--.card-footer-->
                                        </div><!--.card-->
                                    </div>
                                </div><!--.row-->

                                <hr class="clearfix my-5" />

                                <!--Merge reportes-->

                                <div class="row" id="mergeAllExceptOpenAndCarita">
                                    @*<div class="col-sm-12 col-md-6 col-lg-4" id="mergeGraficoForRadioAndCheck">
                                        </div>
                                        <div class="col-sm-12 col-md-6 col-lg-4" id="mergeGraficoLikert">
                                        </div>
                                        <div class="col-sm-12 col-md-6 col-lg-4" id="mergeGraficoForSelectAndRango">
                                        </div>*@
                                </div>

                                <hr class="clearfix my-5">

                                <div class="row" id="mergeAbiertasAndCarita">
                                    @*<div class="col-lg-6 mb-0" id="mergeRespuestasAbiertas">
                                        </div>
                                        <div class="col-lg-6 mb-0" id="mergeGraficoCaritas">
                                        </div>*@
                                </div><!--.row-->


                            </div><!--.container-->
                        </div><!--.content-wrap-->
                    </section>
                </main><!--#wrapper-->
            </div>
            <footer id="footer">
                <div class="container-fluid px-lg-5">
                    <div class="row">
                        <div class="col-6">
                            <p class="copyrights"><span class="color">DIAGNOSTIC 4U</span> @DateTime.Now.Year</p>@Html.Hidden("terminadas", "", htmlAttributes: new { @id = "txtTerminadas" })
                        </div>
                        <div class="col-6">
                            <p class="text-support"><i class="far fa-life-ring"></i> SOPORTE</p>
                        </div>
                    </div>
                </div>
            </footer>
            <link href="~/css/custom-administrator.css" rel="stylesheet" />
            <script src="~/scripts/jquery-3.4.1.min.js"></script>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
            <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
            <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
            <script src="~/scripts/GetDataArray.js"></script>
            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
            <script>
        $(document).ready(function () {
            swal({
                title: "Procesando...",
                text: "Espere...",
                imageUrl: "",
                icon: "/images/load.gif",
                closeOnClickOutside: false,
                showConfirmButton: false,
                allowOutsideClick: false
            });
            $('.swal-icon').addClass('load');
            $('.load').css('width', '25%');
            $('.load').css('height', '25%');
            $('swal-button-container').css('display', 'none');


            getParticipacion();
            getPreguntasByIdEncuesta();//UpdateAll
        });
        function GetDashBoard() {
            window.location.href = "/DashBoard/DashBoard"
        }
            </script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js"></script>
            <script>
        var listDivsPregunta = [];
        var terminadasGlobal = 0;
        var IdEncuesta = $('#TxtIdEncuesta').val();
        var nombreEncuesta = $('#TxtNombreEncuesta').val();
        let model = { idEncuesta: IdEncuesta };
        function getParticipacion() {
            $.ajax({
                url: '@Url.Action("GetParticipacion")',
                data: model,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON != null) {
                        //$('#mergeEnProceso').text(Response.responseJSON.Iniciadas);
                        //$('#mergeNoComenzado').text(Response.responseJSON.NoIniciadas);
                        //$('#mergeTerminadas').text(Response.responseJSON.Terminadas);
                        //$('#mergeTotal').text(Response.responseJSON.Esperadas);
                        //terminadasGlobal = Response.responseJSON.Terminadas;
                        //$('#txtTerminadas').val(Response.responseJSON.Terminadas);


                        count(Response.responseJSON.Iniciadas, 'mergeEnProceso');
                        count(Response.responseJSON.NoIniciadas, 'mergeNoComenzado');
                        count(Response.responseJSON.Terminadas, 'mergeTerminadas');
                        count(Response.responseJSON.Esperadas, 'mergeTotal');

                    }
                    else {
                        swal('No se pudieron obtener los resultados de participación en la encuesta ' + nombreEncuesta, '', 'info');
                    }
                }
            });
        }
        function count(numMax, divToSet) {
            var counter = { var: 0 };
            TweenMax.to(counter, 3, {
                var: numMax,
                onUpdate: function () {
                    var number = Math.ceil(counter.var);
                    $('#' + divToSet).html(number);
                    if (number === counter.var) {
                        //count.kill();
                        return false;
                        //$('#' + divToSet).text(counter.var);
                    }
                },
                onComplete: function () {
                    count();
                },
                ease: Circ.easeOut
            });
        }



        function getPreguntasByIdEncuesta() {
            var IdEncuesta = $('#TxtIdEncuesta').val();
            $.ajax({
                url: '@Url.Action("GetPreguntasByIdEncuesta")',
                data: model,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON != null) {
                        $('.swal-icon').addClass('load');
                        $('.load').css('width', '25%');
                        $('.load').css('height', '25%');
                        $('swal-button-container').css('display', 'none');
                        for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                            var itemPregunta = Response.responseJSON.Objects[i];
                            var idTipoControl = itemPregunta.TipoControl.IdTipoControl;
                            switch (idTipoControl) {
                                case 1:
                                    showOpenAnswers(itemPregunta, idTipoControl);//Respuesta corta OK
                                    break;
                                case 2:
                                    showOpenAnswers(itemPregunta, idTipoControl);//Respuesta larga OK
                                    break;
                                case 3:
                                    createCakeGraphic(itemPregunta, idTipoControl);//CheckBox OK
                                    break;
                                case 4:
                                    createCakeGraphic(itemPregunta, idTipoControl);//RadioButton OK
                                    break;
                                case 5:
                                    createBarrasVertical(itemPregunta, idTipoControl);//Select OK
                                    break;
                                case 6:
                                    createBarrasFaceFeel(itemPregunta, idTipoControl);//Sentimiento OK
                                    break;
                                case 7:
                                    createBarrasVertical(itemPregunta, idTipoControl);//Rango OK
                                    break;
                                //Casos del 8 al 12 se omiten porque se buscan en automatico en el ready
                                default:
                                    //swal('El tipo de gráfico para la pregunta: ' + itemPregunta.Pregunta + ' no está definido', '', 'info');
                                    break;
                            }
                        }

                        createBarrasHorizontal();//Likerts del 8 al 11


                        ordenar();//jQuery(jQuery("#").detach()).appendTo("#mergeAllExceptOpenAndCarita");




                    }
                    else {
                        swal('No se pudieron obtener las preguntas de la encuesta ' + nombreEncuesta, '', 'info');
                    }
                    ordenar();
                }
            });
        }
        //Obtener todas las respuestas para esa pregunta
        //Obtener el conteo
        function createCakeGraphic(itemPregunta, idTipoControl) {
            console.log('Creando grafico de Pastel');
            let modelPregunta = {
                idPregunta: itemPregunta.IdPregunta,
                idEncuesta: IdEncuesta,
                IdentificadorTipoControl: idTipoControl
            };
            $.ajax({
                url: '@Url.Action("GetRespuestasByIdPregunta")',
                data: modelPregunta,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON != null) {
                        console.log(Response.responseJSON);//Preguntas y frecuencias junto a pregunta
                        var IdPregunta = 0;
                        var Pregunta = "";
                        try {
                            IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                            Pregunta = Response.responseJSON.Objects[0].Pregunta.Pregunta;
                        } catch (e) {
                            IdPregunta = Response.responseJSON.Objects[0].Preguntas.IdPregunta;
                            Pregunta = Response.responseJSON.Objects[0].Preguntas.Pregunta;
                        }

                        if (IdPregunta == 4005) {
                            console.log(Response.responseJSON.ObjectsAux);
                        }

                        var DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                        var divPadre = 'padreForIdPregunta_' + IdPregunta
                        listDivsPregunta.push(divPadre);
                        $('#mergeAllExceptOpenAndCarita').append('<div class="col-sm-12 col-md-6 col-lg-4 mb-3 container-graph" id="'+divPadre+'">   <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%; height: 400px;"><div class="'+DivIdForPregunta+'"></div></div> </div>');

                        var listRespuestas = ['Respuestas'];
                        var listFrecuencias = ['Frecuencias'];
                        var listRespuestasAux = [];
                        for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                            listRespuestasAux.push(Response.responseJSON.Objects[i].Respuesta);
                        }

                        if (Response.responseJSON.Objects[0].Pregunta.TipoControl.IdTipoControl == 3) {//Check
                            for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                                //1: "Lavadora"
                                //2: "Plancha"
                                //3: "Plancha"
                                //4: "Micro"
                                //5: "Micro"
                                //6: "Refrigerador"
                                //7: "Refrigerador"
                                if (!listRespuestas.includes(Response.responseJSON.Objects[i].Respuesta)) {
                                    listRespuestas.push(Response.responseJSON.Objects[i].Respuesta);
                                    var count = 0;
                                    for (var j = 0; j < listRespuestasAux.length; ++j) {
                                        if (listRespuestasAux[j] == Response.responseJSON.Objects[i].Respuesta)
                                            count++;
                                    }
                                    console.log(count);
                                    listFrecuencias.push(count);
                                }
                            }
                        }
                        else {
                            for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                                listRespuestas.push(Response.responseJSON.Objects[i].Respuesta);
                                listFrecuencias.push(Response.responseJSON.Objects[i].conteoByPregunta);
                            }
                        }




                        //FillGraphic--Descomentar lo siguiente
                        google.charts.load("current", {packages:["corechart"]});
                        google.charts.setOnLoadCallback(drawChart);
                        function drawChart() {

                            var data = google.visualization.arrayToDataTable([
                                [listRespuestas[0], listFrecuencias[0]],
                                [listRespuestas[1], listFrecuencias[1]],
                                [listRespuestas[2], listFrecuencias[2]],
                                [listRespuestas[3], listFrecuencias[3]],
                                [listRespuestas[4], listFrecuencias[4]],
                                [listRespuestas[5], listFrecuencias[5]],
                                [listRespuestas[6], listFrecuencias[6]],
                                [listRespuestas[7], listFrecuencias[7]],
                                [listRespuestas[8], listFrecuencias[8]],
                                [listRespuestas[9], listFrecuencias[9]],
                                [listRespuestas[10], listFrecuencias[10]],
                                [listRespuestas[11], listFrecuencias[11]],
                                [listRespuestas[12], listFrecuencias[12]],
                                [listRespuestas[13], listFrecuencias[13]],
                                [listRespuestas[14], listFrecuencias[14]],
                                [listRespuestas[15], listFrecuencias[15]],
                                [listRespuestas[16], listFrecuencias[16]],
                                [listRespuestas[17], listFrecuencias[17]],
                                [listRespuestas[18], listFrecuencias[18]],
                                [listRespuestas[19], listFrecuencias[19]],
                                [listRespuestas[20], listFrecuencias[20]],
                                [listRespuestas[21], listFrecuencias[21]],
                                [listRespuestas[22], listFrecuencias[22]],
                                [listRespuestas[23], listFrecuencias[23]],
                                [listRespuestas[24], listFrecuencias[24]],
                                [listRespuestas[25], listFrecuencias[25]]
                            ]);

                          var options = {
                            title: Pregunta,
                            pieHole: 0.4,
                          };
                          var chart = new google.visualization.PieChart(document.getElementById(DivIdForPregunta));




                          chart.draw(data, options);

                        }
                        //End Fill
                        var json = [
                              { 'Respuesta': listRespuestas[1], 'Frecuencia': listFrecuencias[1] },
                              { 'Respuesta': listRespuestas[2], 'Frecuencia': listFrecuencias[2] },
                              { 'Respuesta': listRespuestas[3], 'Frecuencia': listFrecuencias[3] },
                              { 'Respuesta': listRespuestas[4], 'Frecuencia': listFrecuencias[4] },
                              { 'Respuesta': listRespuestas[5], 'Frecuencia': listFrecuencias[5] },
                              { 'Respuesta': listRespuestas[6], 'Frecuencia': listFrecuencias[6] },
                              { 'Respuesta': listRespuestas[7], 'Frecuencia': listFrecuencias[7] },
                              { 'Respuesta': listRespuestas[8], 'Frecuencia': listFrecuencias[8] },
                              { 'Respuesta': listRespuestas[9], 'Frecuencia': listFrecuencias[9] },
                              { 'Respuesta': listRespuestas[10], 'Frecuencia': listFrecuencias[10] },
                              { 'Respuesta': listRespuestas[11], 'Frecuencia': listFrecuencias[11] },
                              { 'Respuesta': listRespuestas[12], 'Frecuencia': listFrecuencias[12] },
                              { 'Respuesta': listRespuestas[13], 'Frecuencia': listFrecuencias[13] },
                              { 'Respuesta': listRespuestas[14], 'Frecuencia': listFrecuencias[14] },
                              { 'Respuesta': listRespuestas[15], 'Frecuencia': listFrecuencias[15] },
                        ]
                        ConvertJSONToCsv(json, Pregunta, Pregunta, divPadre);
                    }
                    else {

                    }
                }
            });
        }

        function createBarrasHorizontalLikertDoble(itemPregunta, idTipoControl, IdEncuesta) {
            //Likert Doble => Probando
            console.log('Creando grafico de Barras horizontal para likert doble');
            var IdEncuesta = $('#TxtIdEncuesta').val();
            let modelPregunta = {
                idPregunta: itemPregunta.IdPregunta,
                idEncuesta: IdEncuesta,
                IdentificadorTipoControl: idTipoControl
            };
            $.ajax({
                url: '@Url.Action("GetRespuestasByIdPregunta")',
                data: modelPregunta,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON.Objects.length > 0) {
                        console.log(Response.responseJSON);//Recibo el nombre de las dos columnas (Enfoques empresa y area)

                        var IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                        var Instrucciones = Response.responseJSON.Objects[0].Pregunta.Pregunta;//Instrucciones

                        console.log(itemPregunta);
                        var numPreguntasLikert = itemPregunta.ListPreguntasLikert.length;
                        //Este es el numero de preguntas likert en el likert doble

                        var columnaA = Response.responseJSON.Objects[0].Respuesta;
                        var columnaB = Response.responseJSON.Objects[1].Respuesta;
                        var listReactivosLikert = [];//Reactivo N
                        for (var i = 0; i < itemPregunta.ListPreguntasLikert.length; i++) {
                            var reactLikertcolA = itemPregunta.ListPreguntasLikert[i].PreguntaLikert + ' (' + columnaA + ')';
                            var reactLikertcolB = itemPregunta.ListPreguntasLikert[i].PreguntaLikert + ' (' + columnaB + ')';
                            listReactivosLikert.push(reactLikertcolA);//PreguntasLikert
                            listReactivosLikert.push(reactLikertcolB);//PreguntasLikert
                        }
                        console.log(listReactivosLikert);

                        var IdPregunta = itemPregunta.IdPregunta;
                        let modelPreg = { idPregunta: IdPregunta }
                        $.ajax({ //select * from UsuarioRespuestas where IdPregunta = 1881
                            url: '@Url.Action("GetRespuestasFromPregLikert")',
                            data: modelPreg, //1881
                            complete: function (Response) {
                                if(Response != null){
                                    for (var i = 0; i < Response.responseJSON.Objects.length; i++) {

                                    }
                                }
                            }
                        });





                        var DivIdForPregunta = 'divForPregunta_' + IdPregunta;

                        $('#mergeAllExceptOpenAndCarita').append('<div class="col-sm-12 col-md-6 col-lg-4 mb-3">   <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%; height: 400px;"><div class="' + DivIdForPregunta + '"></div></div>   </div>');



                        //Una lista por cada preguntaLikert
                        var listRespuestas = ['Respuesta'];
                        var listFrecuencias = ['Frecuencias'];

                        var CasiSiempreFalso = 0;
                        var FrecuentementeFalso = 0;
                        var AVecesVerdadAVecesFalso = 0;
                        var FrecuentementeVerdad = 0;
                        var CasiSiempreVerdad = 0;
                        //happierface
                        //happyface
                        for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == '1') {
                                CasiSiempreFalso = CasiSiempreFalso + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == '2') {
                                FrecuentementeFalso = FrecuentementeFalso + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == '3') {
                                AVecesVerdadAVecesFalso = AVecesVerdadAVecesFalso + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == '4') {
                                FrecuentementeVerdad = FrecuentementeVerdad + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == '5') {
                                CasiSiempreVerdad = CasiSiempreVerdad + 1;
                            }
                        }
                        listFrecuencias.push(CasiSiempreFalso);
                        listFrecuencias.push(FrecuentementeFalso);
                        listFrecuencias.push(AVecesVerdadAVecesFalso);
                        listFrecuencias.push(FrecuentementeVerdad);
                        listFrecuencias.push(CasiSiempreVerdad);

                        if (idTipoControl == 8) {//DeAcuerdo
                            listRespuestas.push('Totalmente en Desacuerdo');
                            listRespuestas.push('En Desacuerdo');
                            listRespuestas.push('Indeciso');
                            listRespuestas.push('De Acuerdo');
                            listRespuestas.push('Totalmente de Acuerdo');
                        }
                        if (idTipoControl == 9) {//Frecuencia
                            listRespuestas.push('Nunca');
                            listRespuestas.push('Raramente');
                            listRespuestas.push('Ocasionalmente');
                            listRespuestas.push('Frecuentemente');
                            listRespuestas.push('Siempre');
                        }
                        if (idTipoControl == 10) {//Importancia
                            listRespuestas.push('No Importante');
                            listRespuestas.push('Poco Importante');
                            listRespuestas.push('Moderadamente Importante');
                            listRespuestas.push('Importante');
                            listRespuestas.push('Muy Importante');
                        }
                        if (idTipoControl == 11) {//Probabilidad
                            listRespuestas.push('Siempre es Falso');
                            listRespuestas.push('Usualmente es Falso');
                            listRespuestas.push('A veces es verdad / A veces es falso');
                            listRespuestas.push('Usualmente es verdad');
                            listRespuestas.push('Siempre es Verdad');
                        }
                        if (idTipoControl == 12) {//LikertDoble ClimaLab
                            listRespuestas.push('Casi Siempre es Falso');
                            listRespuestas.push('Frecuentemente es Falso');
                            listRespuestas.push('A veces es verdad / A veces es falso');
                            listRespuestas.push('Frecuentemente es verdad');
                            listRespuestas.push('Casi Siempre es Verdad');
                        }


                        //FillGraphic--Descomentar lo siguiente
                        google.charts.load("current", { packages: ["corechart"] });
                        google.charts.setOnLoadCallback(drawChart);
                        function drawChart() {

                                var data = google.visualization.arrayToDataTable([
                                  ['Opciones', , listRespuestas[1], listRespuestas[2], listRespuestas[3], listRespuestas[4], listRespuestas[5]],
                                  ['Reactivo 1', 10, 24, 20, 32, 18, 5, ''],
                                  ['Reactivo 2', 16, 22, 23, 30, 16, 9, ''],
                                  ['Reactivo 3', 28, 19, 29, 30, 12, 13, '']
                                ]);

                            var options = {
                                width: '100%',
                                height: 400,
                                legend: { position: 'top', maxLines: 3 },
                                bar: { groupWidth: '75%' },
                                isStacked: true,
                            };
                            var chart = new google.visualization.BarChart(document.getElementById(DivIdForPregunta));
                            chart.draw(data, options);

                        }
                        //End Fill
                    }
                    else {

                    }
                }
            });
        }
        var listDataLikerts = [];



        function createBarrasHorizontal() {//ready function
            //Likerts => OK
            //Obtener los resultados no de una sino de todas las preguntas de tipo likert en la encuesta
            let model = { idEncuesta: IdEncuesta };
            var subseccionAnterior = 0;
            $.ajax({
                url: '@Url.Action("GetPreguntasLikertExceptDobleByEncuesta")',
                data: model,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                complete: function (Response) {
                    if (Response != null) {
                        var json = null;
                        var existenSubsecciones = false;
                        //Response.responseJSON.Objects => Pregunta
                        //Response.responseJSON.ObjectsAux => Frecuencia
                        var DivIdForPregunta = '';
                        try {
                            for (var i = 0; i < Response.responseJSON.Data.length; i++) {
                                if (Response.responseJSON.Data[i].SubSeccion > 0) {
                                    existenSubsecciones = true;
                                }
                            }
                            for (var i = 0; i < Response.responseJSON.Data.length; i++) {
                                if (existenSubsecciones == true) {
                                    var IdPregunta = Response.responseJSON.Data[i].IdPregunta;//Tomo solo la primera de la lista como referencia
                                    DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                                    var divPadre = 'padreForIdPregunta_' + IdPregunta
                                    listDivsPregunta.push(divPadre);
                                    $('#mergeAllExceptOpenAndCarita').append('<div class="col-sm-12 col-md-6 col-lg-4 mb-3 container-graph" id="' + divPadre + '" >   <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%; height: 400px;"><div class="' + DivIdForPregunta + '"></div></div>  </div>');
                                }
                                else {
                                    var IdPregunta = Response.responseJSON.Data[0].IdPregunta;//Tomo solo la primera de la lista como referencia
                                    DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                                    var divPadre = 'padreForIdPregunta_' + IdPregunta
                                    listDivsPregunta.push(divPadre);
                                    $('#mergeAllExceptOpenAndCarita').append('<div class="col-sm-12 col-md-6 col-lg-4 mb-3 container-graph" id="' + divPadre + '" >   <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%; height: 400px;"><div class="' + DivIdForPregunta + '"></div></div>  </div>');
                                    break;
                                }
                            }
                        } catch (e) {

                        }
                        var dataForGraphics = [];

                        var flag = 0;
                        for (var i = 0; i < Response.responseJSON.Data.length; i++) {
                            var CasiSiempreFalso = 0;
                            var FrecuentementeFalso = 0;
                            var AVecesVerdadAVecesFalso = 0;
                            var FrecuentementeVerdad = 0;
                            var CasiSiempreVerdad = 0;
                            let modelPreguntaJS = {
                                Pregunta: null,
                                CSF: null,
                                FF: null,
                                AV: null,
                                FV: null,
                                CSV: null
                            };
                            let modelPreguntaJSColA = {
                                Pregunta: null,
                                CSF: null,
                                FF: null,
                                AV: null,
                                FV: null,
                                CSV: null
                            };
                            let modelPreguntaJSColB = {
                                Pregunta: null,
                                CSF: null,
                                FF: null,
                                AV: null,
                                FV: null,
                                CSV: null
                            };



                            if (existenSubsecciones == false) {
                                if (Response.responseJSON.Data[i].TipoControl.IdTipoControl == 12) {
                                    try {
                                        var colA = Response.responseJSON.Data[i].listUsuarioResp[0].Respuestas.Respuesta;
                                        var colB = Response.responseJSON.Data[i].listUsuarioResp[1].Respuestas.Respuesta;
                                        var preguntaColA = '';
                                        var preguntaColB = '';
                                        for (var k = 0; k < Response.responseJSON.Data[i].ListPreguntasLikert.length; k++) {
                                            preguntaColA = Response.responseJSON.Data[i].ListPreguntasLikert[k].PreguntaLikert + '(' + colA + ')';
                                            preguntaColB = Response.responseJSON.Data[i].ListPreguntasLikert[k].PreguntaLikert + '(' + colB + ')';
                                            //}
                                            var IdPreguntaLikertDobleaCTUAL = Response.responseJSON.Data[i].ListPreguntasLikert[k].IdPreguntaLikert;

                                            var CasiSiempreFalsoColA = 0;
                                            var FrecuentementeFalsoColA = 0;
                                            var AVecesVerdadAVecesFalsoColA = 0;
                                            var FrecuentementeVerdadColA = 0;
                                            var CasiSiempreVerdadColA = 0;

                                            var CasiSiempreFalsoColB = 0;
                                            var FrecuentementeFalsoColB = 0;
                                            var AVecesVerdadAVecesFalsoColB = 0;
                                            var FrecuentementeVerdadColB = 0;
                                            var CasiSiempreVerdadColB = 0;

                                            var numPreguntas = Response.responseJSON.Data[i].ListPreguntasLikert.length;//numero de preguntas likert
                                            numPreguntas = numPreguntas * 2;


                                            for (var j = 0; j < Response.responseJSON.Data[i].listUsuarioResp.length; j++) {//Traer el id de pregunta likert
                                                //var IdPreguntaLikertDobleaCTUAL = Response.responseJSON.Objects[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert;//Aqui esta el Id de pregunta likert
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '1' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    CasiSiempreFalsoColA = CasiSiempreFalsoColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '2' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    FrecuentementeFalsoColA = FrecuentementeFalsoColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '3' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    AVecesVerdadAVecesFalsoColA = AVecesVerdadAVecesFalsoColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '4' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    FrecuentementeVerdadColA = FrecuentementeVerdadColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '5' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    CasiSiempreVerdadColA = CasiSiempreVerdadColA + 1;
                                                }
                                            }


                                            for (var j = 0; j < Response.responseJSON.Data[i].listUsuarioResp.length; j++) {//Traer el id de pregunta likert
                                                //var IdPreguntaLikertDobleaCTUAL = Response.responseJSON.Objects[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert;//Aqui esta el Id de pregunta likert
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '1' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    CasiSiempreFalsoColB = CasiSiempreFalsoColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '2' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    FrecuentementeFalsoColB = FrecuentementeFalsoColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '3' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    AVecesVerdadAVecesFalsoColB = AVecesVerdadAVecesFalsoColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '4' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    FrecuentementeVerdadColB = FrecuentementeVerdadColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '5' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    CasiSiempreVerdadColB = CasiSiempreVerdadColB + 1;
                                                }
                                            }

                                            let modelPreguntaJSColA = {
                                                Pregunta: preguntaColA,
                                                CSF: CasiSiempreFalsoColA,
                                                FF: FrecuentementeFalsoColA,
                                                AV: AVecesVerdadAVecesFalsoColA,
                                                FV: FrecuentementeVerdadColA,
                                                CSV: CasiSiempreVerdadColA
                                            };
                                            json = modelPreguntaJSColA;
                                            let modelPreguntaJSColB = {
                                                Pregunta: preguntaColB,
                                                CSF: CasiSiempreFalsoColB,
                                                FF: FrecuentementeFalsoColB,
                                                AV: AVecesVerdadAVecesFalsoColB,
                                                FV: FrecuentementeVerdadColB,
                                                CSV: CasiSiempreVerdadColB
                                            };
                                            dataForGraphics.push(modelPreguntaJSColA);
                                            dataForGraphics.push(modelPreguntaJSColB);
                                        }
                                    } catch (e) {
                                        //Pintar que aun no hay respuestas
                                        //swal('Aún no se tienen respuestas en las preguntas de tipo Likert');
                                    }
                                }
                                else {
                                    var Pregunta = Response.responseJSON.Data[i].Pregunta;

                                    CasiSiempreFalso = Response.responseJSON.Data[i].CSF;
                                    FrecuentementeFalso = Response.responseJSON.Data[i].FF;
                                    AVecesVerdadAVecesFalso = Response.responseJSON.Data[i].AV;
                                    FrecuentementeVerdad = Response.responseJSON.Data[i].FV;
                                    CasiSiempreVerdad = Response.responseJSON.Data[i].CSV;

                                    modelPreguntaJS = {
                                        Pregunta: Pregunta,
                                        CSF: CasiSiempreFalso,
                                        FF: FrecuentementeFalso,
                                        AV: AVecesVerdadAVecesFalso,
                                        FV: FrecuentementeVerdad,
                                        CSV: CasiSiempreVerdad
                                    };
                                    dataForGraphics.push(modelPreguntaJS);
                                    //CasiSiempreFalso = 0;
                                    //FrecuentementeFalso = 0;
                                    //AVecesVerdadAVecesFalso = 0;
                                    //FrecuentementeVerdad = 0;
                                    //CasiSiempreVerdad = 0;
                                }
                                var contador = 0;
                            console.log(dataForGraphics);
                            //FillGraphics
                            google.charts.load("current", { packages: ["corechart"] });
                            google.charts.setOnLoadCallback(drawChart);
                                function drawChart() {

                                var data = null;

                                var long = dataForGraphics.length;

                                var arrayDataForGraphics = CreateDataArray(dataForGraphics, long)

                                if (arrayDataForGraphics == null) {
                                    $('#' + DivIdForPregunta).append('<h3>Aún no existen respuestas en la pregunta de tipo Likert para mostrar el gráfico</h3>');
                                }

                                var options = {
                                    width: '100%',
                                    height: 400,
                                    legend: { position: 'top', maxLines: 3 },
                                    bar: { groupWidth: '75%' },
                                    isStacked: true,
                                };
                                var chart = new google.visualization.BarChart(document.getElementById(DivIdForPregunta));
                                if (long > 0) {
                                    chart.draw(arrayDataForGraphics, options);
                                    if (contador == 0) {
                                        ConvertJSONToCsv(dataForGraphics, Pregunta, Pregunta, divPadre);
                                        contador = contador + 1;
                                    }
                                }
                            }
                            //EndFill

                            }
                            else {
                                //getLikertDoble
                                if (Response.responseJSON.Data[i].TipoControl.IdTipoControl == 12 && Response.responseJSON.Data[i].TipoControl.IdTipoControl != 13) {
                                    try {
                                        var colA = Response.responseJSON.Data[i].listUsuarioResp[0].Respuestas.Respuesta;
                                        var colB = Response.responseJSON.Data[i].listUsuarioResp[1].Respuestas.Respuesta;
                                        var preguntaColA = '';
                                        var preguntaColB = '';
                                        for (var k = 0; k < Response.responseJSON.Data[i].ListPreguntasLikert.length; k++) {
                                            preguntaColA = Response.responseJSON.Data[i].ListPreguntasLikert[k].PreguntaLikert + '(' + colA + ')';
                                            preguntaColB = Response.responseJSON.Data[i].ListPreguntasLikert[k].PreguntaLikert + '(' + colB + ')';
                                            //}
                                            var IdPreguntaLikertDobleaCTUAL = Response.responseJSON.Data[i].ListPreguntasLikert[k].IdPreguntaLikert;

                                            var CasiSiempreFalsoColA = 0;
                                            var FrecuentementeFalsoColA = 0;
                                            var AVecesVerdadAVecesFalsoColA = 0;
                                            var FrecuentementeVerdadColA = 0;
                                            var CasiSiempreVerdadColA = 0;

                                            var CasiSiempreFalsoColB = 0;
                                            var FrecuentementeFalsoColB = 0;
                                            var AVecesVerdadAVecesFalsoColB = 0;
                                            var FrecuentementeVerdadColB = 0;
                                            var CasiSiempreVerdadColB = 0;

                                            var numPreguntas = Response.responseJSON.Data[i].ListPreguntasLikert.length;//numero de preguntas likert
                                            numPreguntas = numPreguntas * 2;


                                            for (var j = 0; j < Response.responseJSON.Data[i].listUsuarioResp.length; j++) {//Traer el id de pregunta likert
                                                //var IdPreguntaLikertDobleaCTUAL = Response.responseJSON.Objects[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert;//Aqui esta el Id de pregunta likert
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '1' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    CasiSiempreFalsoColA = CasiSiempreFalsoColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '2' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    FrecuentementeFalsoColA = FrecuentementeFalsoColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '3' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    AVecesVerdadAVecesFalsoColA = AVecesVerdadAVecesFalsoColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '4' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    FrecuentementeVerdadColA = FrecuentementeVerdadColA + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '5' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colA) {
                                                    CasiSiempreVerdadColA = CasiSiempreVerdadColA + 1;
                                                }
                                            }


                                            for (var j = 0; j < Response.responseJSON.Data[i].listUsuarioResp.length; j++) {//Traer el id de pregunta likert
                                                //var IdPreguntaLikertDobleaCTUAL = Response.responseJSON.Objects[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert;//Aqui esta el Id de pregunta likert
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '1' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    CasiSiempreFalsoColB = CasiSiempreFalsoColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '2' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    FrecuentementeFalsoColB = FrecuentementeFalsoColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '3' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    AVecesVerdadAVecesFalsoColB = AVecesVerdadAVecesFalsoColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '4' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    FrecuentementeVerdadColB = FrecuentementeVerdadColB + 1;
                                                }
                                                if (Response.responseJSON.Data[i].listUsuarioResp[j].RespuestaUsuario == '5' && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.PreguntasLikert.IdPreguntaLikert == IdPreguntaLikertDobleaCTUAL && Response.responseJSON.Data[i].listUsuarioResp[j].Respuestas.Respuesta == colB) {
                                                    CasiSiempreVerdadColB = CasiSiempreVerdadColB + 1;
                                                }
                                            }

                                            let modelPreguntaJSColA = {
                                                Pregunta: preguntaColA,
                                                CSF: CasiSiempreFalsoColA,
                                                FF: FrecuentementeFalsoColA,
                                                AV: AVecesVerdadAVecesFalsoColA,
                                                FV: FrecuentementeVerdadColA,
                                                CSV: CasiSiempreVerdadColA
                                            };
                                            json = modelPreguntaJSColA;
                                            let modelPreguntaJSColB = {
                                                Pregunta: preguntaColB,
                                                CSF: CasiSiempreFalsoColB,
                                                FF: FrecuentementeFalsoColB,
                                                AV: AVecesVerdadAVecesFalsoColB,
                                                FV: FrecuentementeVerdadColB,
                                                CSV: CasiSiempreVerdadColB
                                            };
                                            dataForGraphics.push(modelPreguntaJSColA);
                                            dataForGraphics.push(modelPreguntaJSColB);
                                        }
                                    } catch (e) {
                                        //Pintar que aun no hay respuestas
                                        //swal('Aún no se tienen respuestas en las preguntas de tipo Likert');
                                    }
                                }
                                //GetLikertNormal
                                else if (Response.responseJSON.Data[i].TipoControl.IdTipoControl != 12 && Response.responseJSON.Data[i].TipoControl.IdTipoControl != 13) {
                                    var Pregunta = Response.responseJSON.Data[i].Pregunta;

                                    CasiSiempreFalso = Response.responseJSON.Data[i].CSF;
                                    FrecuentementeFalso = Response.responseJSON.Data[i].FF;
                                    AVecesVerdadAVecesFalso = Response.responseJSON.Data[i].AV;
                                    FrecuentementeVerdad = Response.responseJSON.Data[i].FV;
                                    CasiSiempreVerdad = Response.responseJSON.Data[i].CSV;

                                    modelPreguntaJS = {
                                        Pregunta: Pregunta,
                                        CSF: CasiSiempreFalso,
                                        FF: FrecuentementeFalso,
                                        AV: AVecesVerdadAVecesFalso,
                                        FV: FrecuentementeVerdad,
                                        CSV: CasiSiempreVerdad
                                    };
                                    dataForGraphics.push(modelPreguntaJS);
                                    //CasiSiempreFalso = 0;
                                    //FrecuentementeFalso = 0;
                                    //AVecesVerdadAVecesFalso = 0;
                                    //FrecuentementeVerdad = 0;
                                    //CasiSiempreVerdad = 0;
                                }

                                console.log(dataForGraphics);

                                var SubSeccion = Response.responseJSON.Data[i].SubSeccion;
                                if (subseccionAnterior != SubSeccion) {
                                    //Merge en el div de subseccion que tenga
                                    //FillGraphics
                                    google.charts.load("current", { packages: ["corechart"] });
                                    google.charts.setOnLoadCallback(drawChart);
                                    function drawChart() {
                                        var data = null;
                                        var long = dataForGraphics.length;
                                        var arrayDataForGraphics = CreateDataArray(dataForGraphics, long);

                                        if (arrayDataForGraphics == null) {
                                            $('#' + DivIdForPregunta).append('<h3>Aún no existen respuestas en la pregunta de tipo Likert para mostrar el gráfico</h3>');
                                        }
                                        var options = {
                                            width: '100%',
                                            height: 400,
                                            legend: { position: 'top', maxLines: 3 },
                                            bar: { groupWidth: '75%' },
                                            isStacked: true,
                                        };
                                        var chart = new google.visualization.BarChart(document.getElementById('padreForIdPregunta_' + SubSeccion));
                                        if (long > 0) {
                                            chart.draw(arrayDataForGraphics, options);
                                        }
                                    }//EndDrawChart
                                    CreateGraphic(dataForGraphics, SubSeccion, Pregunta);
                                    //ConvertJSONToCsv(dataForGraphics, Pregunta, Pregunta, divPadre);
                                    subseccionAnterior = SubSeccion;
                                    dataForGraphics = [];
                                }
                            }

                        }//For
                        setTimeout('terminado()', 5000);

                    }
                    else {
                        console.log('No hay likerts en la encuesta');
                    }
                    ordenar();
                }
            });
            ordenar();
        }
        //*****************************************************************
        function terminado() {
            swal({
                title: "Los gráficos han terminado de cargarse",
                text: "",
                imageUrl: "",
                icon: "success",
                closeOnClickOutside: false,
                showConfirmButton: false,
                allowOutsideClick: false
            }).then(function () {
                ordenar();
                var t1 = document.getElementsByClassName('container-graph');
                for (var i = 0; i < t1.length; i++) {
                    if (t1[i].getElementsByTagName('svg').length > 0) {
                        //alert('Tiene grafico');

                    }
                    else {
                        //alert('No hay grafico');
                        $('#' + t1[i].id).hide();
                    }
                }
                numerarPreguntas();
            });
        }
        function createBarrasVertical(itemPregunta, idTipoControl) {
            console.log('Creando grafico de Barras vertical');
            let modelPregunta = {
                idPregunta: itemPregunta.IdPregunta,
                idEncuesta: IdEncuesta,
                IdentificadorTipoControl: idTipoControl
            };
            $.ajax({
                url: '@Url.Action("GetRespuestasByIdPregunta")',
                data: modelPregunta,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON != null) {
                        if (idTipoControl == 7) {
                            //Rango
                            console.log(Response.responseJSON);//Preguntas y frecuencias junto a pregunta
                            var IdPregunta = 0;
                            var Pregunta = "";
                            try {
                                IdPregunta = Response.responseJSON.Objects[0].Preguntas.IdPregunta;
                                Pregunta = Response.responseJSON.Objects[0].Preguntas.Pregunta;
                            } catch (e) {
                                IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                                Pregunta = Response.responseJSON.Objects[0].Pregunta.Pregunta;
                            }




                            var DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                            var divForPadre = 'padreForIdPregunta_' + IdPregunta;
                            listDivsPregunta.push(divForPadre);
                            $('#mergeAllExceptOpenAndCarita').append('<div class="col-sm-12 col-md-6 col-lg-4 mb-3 container-graph" id="' + divForPadre + '" >    <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%; height: 400px;"><div class="no-remove ' + DivIdForPregunta + '"></div></div>  </div>');

                            var listRespuestas = ['Pregunta'];
                            var listFrecuencias = ['Respuesta'];
                            for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                                listFrecuencias.push(Response.responseJSON.Objects[i].RespuestaUsuario);
                            }

                            //FillGraphic
                            google.charts.load("current", { packages: ["corechart"] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {

                                var data = google.visualization.arrayToDataTable([
                                    [Pregunta, listFrecuencias[0]],
                                    [Pregunta, listFrecuencias[1]],
                                    [Pregunta, listFrecuencias[2]],
                                    [Pregunta, listFrecuencias[3]],
                                    [Pregunta, listFrecuencias[4]],
                                    [Pregunta, listFrecuencias[5]],
                                    [Pregunta, listFrecuencias[6]],
                                    [Pregunta, listFrecuencias[7]],
                                    [Pregunta, listFrecuencias[8]],
                                    [Pregunta, listFrecuencias[9]],
                                    [Pregunta, listFrecuencias[10]],
                                    [Pregunta, listFrecuencias[11]],
                                    [Pregunta, listFrecuencias[12]],
                                    [Pregunta, listFrecuencias[13]],
                                    [Pregunta, listFrecuencias[14]],
                                    [Pregunta, listFrecuencias[15]],
                                    [Pregunta, listFrecuencias[16]],
                                    [Pregunta, listFrecuencias[17]],
                                    [Pregunta, listFrecuencias[18]],
                                    [Pregunta, listFrecuencias[19]],
                                    [Pregunta, listFrecuencias[20]],
                                    [Pregunta, listFrecuencias[21]],
                                    [Pregunta, listFrecuencias[22]],
                                    [Pregunta, listFrecuencias[23]]
                                ]);

                                var options = {
                                    title: Pregunta,
                                    legend: { position: 'none' }
                                };
                                var chart = new google.visualization.Histogram(document.getElementById(DivIdForPregunta));
                                chart.draw(data, options);

                            }
                            //End Fill
                            var json = [
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[1] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[2] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[3] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[4] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[5] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[6] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[7] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[8] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[9] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[10] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[11] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[12] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[13] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[14] },
                              { 'Respuesta': Pregunta, 'Frecuencia': listFrecuencias[15] },
                            ]
                            ConvertJSONToCsv(json, Pregunta, Pregunta, divForPadre);
                        }
                        else
                        {
                            console.log(Response.responseJSON);//Preguntas y frecuencias junto a pregunta

                            var IdPregunta = 0;
                            var Pregunta = "";
                            try {
                                IdPregunta = Response.responseJSON.Objects[0].Preguntas.IdPregunta;
                                Pregunta = Response.responseJSON.Objects[0].Preguntas.Pregunta;
                            } catch (e) {
                                IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                                Pregunta = Response.responseJSON.Objects[0].Pregunta.Pregunta;
                            }


                            //var IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                            //var Pregunta = Response.responseJSON.Objects[0].Pregunta.Pregunta;

                            var DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                            var divPadre = 'padreForIdPregunta_' + IdPregunta;
                            listDivsPregunta.push(divPadre);
                            $('#mergeAllExceptOpenAndCarita').append('<div class="col-sm-12 col-md-6 col-lg-4 mb-3 container-graph" id="' + divPadre + '" >    <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%; height: 400px;"><div class="' + DivIdForPregunta + '"></div></div>  </div>');
                            var listRespuestas = ['Respuestas'];
                            var listFrecuencias = ['Frecuencias'];
                            //var IdRespuesta = Response.responseJSON.Respuesta.IdRespuesta;
                            //var Respuesta = Response.responseJSON.Respuesta.Respuesta;
                            for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                                listRespuestas.push(Response.responseJSON.Objects[i].Respuesta);
                                listFrecuencias.push(Response.responseJSON.Objects[i].conteoByPregunta);
                            }

                            //FillGraphic
                            google.charts.load("current", { packages: ["corechart"] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {

                                var data = google.visualization.arrayToDataTable([
                                    [listRespuestas[0], listFrecuencias[0]],
                                    [listRespuestas[1], listFrecuencias[1]],
                                    [listRespuestas[2], listFrecuencias[2]],
                                    [listRespuestas[3], listFrecuencias[3]],
                                    [listRespuestas[4], listFrecuencias[4]],
                                    [listRespuestas[5], listFrecuencias[5]],
                                    [listRespuestas[6], listFrecuencias[6]],
                                    [listRespuestas[7], listFrecuencias[7]],
                                    [listRespuestas[8], listFrecuencias[8]],
                                    [listRespuestas[9], listFrecuencias[9]],
                                    [listRespuestas[10], listFrecuencias[10]],
                                    [listRespuestas[11], listFrecuencias[11]]
                                ]);
                                /*Ebd*/

                                var options = {
                                    title: Pregunta,
                                    legend: { position: 'none' }
                                };
                                var chart = new google.visualization.Histogram(document.getElementById(DivIdForPregunta));
                                chart.draw(data, options);

                            }
                            //End Fill
                            var json = [
                              { 'Respuesta': listRespuestas[1], 'Frecuencia': listFrecuencias[1] },
                              { 'Respuesta': listRespuestas[2], 'Frecuencia': listFrecuencias[2] },
                              { 'Respuesta': listRespuestas[3], 'Frecuencia': listFrecuencias[3] },
                              { 'Respuesta': listRespuestas[4], 'Frecuencia': listFrecuencias[4] },
                              { 'Respuesta': listRespuestas[5], 'Frecuencia': listFrecuencias[5] },
                              { 'Respuesta': listRespuestas[6], 'Frecuencia': listFrecuencias[6] },
                              { 'Respuesta': listRespuestas[7], 'Frecuencia': listFrecuencias[7] },
                              { 'Respuesta': listRespuestas[8], 'Frecuencia': listFrecuencias[8] },
                              { 'Respuesta': listRespuestas[9], 'Frecuencia': listFrecuencias[9] },
                              { 'Respuesta': listRespuestas[10], 'Frecuencia': listFrecuencias[10] },
                              { 'Respuesta': listRespuestas[11], 'Frecuencia': listFrecuencias[11] },
                              { 'Respuesta': listRespuestas[12], 'Frecuencia': listFrecuencias[12] },
                              { 'Respuesta': listRespuestas[13], 'Frecuencia': listFrecuencias[13] },
                              { 'Respuesta': listRespuestas[14], 'Frecuencia': listFrecuencias[14] },
                              { 'Respuesta': listRespuestas[15], 'Frecuencia': listFrecuencias[15] },
                            ]
                            ConvertJSONToCsv(json, Pregunta, Pregunta, divPadre);
                        }
                    }
                    else {

                    }
                }
            });
        }
        //**************************************************************
        function showOpenAnswers(itemPregunta, idTipoControl) {
            console.log('Mostrando las respuestas abiertas');
            let modelPregunta = {
                idPregunta: itemPregunta.IdPregunta,
                idEncuesta: IdEncuesta,
                IdentificadorTipoControl: idTipoControl
            };
            $.ajax({
                url: '@Url.Action("GetRespuestasByIdPregunta")',
                data: modelPregunta,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON != null) {
                        console.log(Response.responseJSON);//Preguntas y frecuencias junto a pregunta

                        var IdPregunta = 0;
                        var Pregunta = "";
                        try {
                            IdPregunta = Response.responseJSON.Objects[0].Preguntas.IdPregunta;
                            Pregunta = Response.responseJSON.Objects[0].Preguntas.Pregunta;
                        } catch (e) {
                            IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                            Pregunta = Response.responseJSON.Objects[0].Pregunta.Pregunta;
                        }

                        try {
                             IdPregunta = Response.responseJSON.Objects[0].Pregunta.IdPregunta;
                             Pregunta = Response.responseJSON.Objects[0].Pregunta.Pregunta;
                        } catch (e) {
                             IdPregunta = Response.responseJSON.Objects[0].Preguntas.IdPregunta;
                             Pregunta = Response.responseJSON.Objects[0].Preguntas.Pregunta;
                        }

                        var IdForTotal = 'showTotal' + IdPregunta;
                        var DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                        var divPadre = 'padreForIdPregunta_' + IdPregunta;
                        listDivsPregunta.push(divPadre);
                        $('#mergeAllExceptOpenAndCarita').append('<div class="col-lg-6 mb-3" id="' + divPadre + '">   <div id="' + DivIdForPregunta + '" class="no-remove mb-0" style="width: 100%;"><div class="' + DivIdForPregunta + '"></div></div>  </div>');

                        var listRespuestas = [];
                        //var IdRespuesta = Response.responseJSON.Respuesta.IdRespuesta;
                        //var Respuesta = Response.responseJSON.Respuesta.Respuesta;
                        var lista = '';


                        if (Response.responseJSON.Objects.length > 5) {
                            for (var i = 0; i < 5; i++) {
                                var numeral = i + 1;
                                var Respuesta = Response.responseJSON.Objects[i].RespuestaUsuario;
                                lista += '<li class="tooltip">' + numeral + '.-' + Respuesta.substr(0, 100) + '<span class="tooltiptext">' + Response.responseJSON.Objects[i].RespuestaUsuario + '</span></li>';
                            }
                        }
                        else {
                            for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                                var numeral = i + 1;
                                var Respuesta = Response.responseJSON.Objects[i].RespuestaUsuario;
                                lista += '<li class="tooltip">' + numeral + '.-' + Respuesta.substr(0, 100) + '<span class="tooltiptext">' + Response.responseJSON.Objects[i].RespuestaUsuario + '</span></li>';
                            }
                        }


                            //numeracion = i + 1;
                            //listRespuestas.push(Response.responseJSON.Objects[i].RespuestaUsuario);
                            //$('#' + IdForTotal).text('Total de respuestas: ' + Response.responseJSON.Objects.length);
                            //$('#' + DivIdForPregunta).append('<p> ' + numeracion + '.-' + Response.responseJSON.Objects[i].RespuestaUsuario + ' </p>');
                            //$('#' + DivIdForPregunta).append(
                            //    '<div class="bg-white p-4">' +
                            //        '<p><strong> ' + Pregunta + ' </strong></p>' +
                            //        '<div class="row center-vertically">' +
                            //        '<div class="col-sm-4 col-md-3 col-xl-2">' +
                            //        '<div class="jumbotron p-2 mb-0 text-center">' +
                            //        '<h1 class="text-white"> ' + Response.responseJSON.Objects.length + ' </h1><p class="color mb-0">Respuestas</p>' +
                            //        '</div>' +
                            //        '</div>' +
                            //        '<div class="col-sm-8 col-md-9 col-xl-10">' +
                            //        '<ol>' +
                            //        lista +
                            //        '</ol>' +
                            //        '</div></div></div>'
                        //);
                            $('#' + DivIdForPregunta).append(
                                '<div class="bg-white p-4">' +
                                    '<p><strong> ' + Pregunta + ' </strong></p>' +
                                    '<div class="row center-vertically">' +
                                    '<div class="col-sm-4 col-md-4 col-xl-4" align="center">' +
                                    '<div class="jumbotron p-2 mb-0 text-center">' +
                                    '<h1 class="text-white"> ' + Response.responseJSON.Objects.length + ' </h1><p class="color mb-0">Respuestas</p>' +
                                    '</div>' +
                                    '</div>' +
                                    '<div class="col-sm-8 col-md-8 col-xl-8">' +
                                    '<ol>' +
                                    lista +
                                    '</ol>' +
                                    '</div></div></div>'
                            );
                        if (Pregunta == 'Ingresa tu correo electrónico personal') {
                                //alert();
                            }
                            var listRespuestas = '[';
                            for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                                var res = '';
                                if (Response.responseJSON.Objects[i].RespuestaUsuario == null) {
                                    Response.responseJSON.Objects[i].RespuestaUsuario = '';
                                }
                                try {
                                    res = Response.responseJSON.Objects[i].RespuestaUsuario.trim();
                                } catch (e) {
                                    res = Response.responseJSON.Objects[i].RespuestaUsuario;
                                }
                                res = res.replace('"', '');
                                res = res.replace(/  /g, " ");
                                res = res.replace(/   /g, " ");
                                res = res.replace(/    /g, " ");
                                res = res.replace(/     /g, " ");
                                res = res.replace(/      /g, " ");
                                res = res.replace(/       /g, " ");
                                res = res.replace(/        /g, " ");
                                res = res.replace(/         /g, " ");
                                res = res.replace(/          /g, " ");
                                res = res.replace(/\n|\r/g, " ");
                                res = res.replace('/', '');
                                res = res.replace('"', '');
                                res = res.replace('\\', '');
                                res = res.replace('"', '');
                                res = res.replace(/\n|\r/g, " ");
                                res = res.replace(/[`^\-?;:'",<>\{\}\[\]\\\/]/gi, '');
                                listRespuestas += '{"Respuesta":"' + res +'"},'
                            }
                            listRespuestas = listRespuestas.substring(0, listRespuestas.length - 1);
                            listRespuestas += ']';
                            var json = JSON.stringify(listRespuestas);
                            listRespuestas = listRespuestas.trim();
                            ConvertJSONToCsv(listRespuestas, Pregunta, Pregunta, divPadre);
                    }
                    else {

                    }
                }
            });
        }
        //**************************************************************************************
        function createBarrasFaceFeel(itemPregunta, idTipoControl) {
            console.log('Creando grafico FaceFeel');
            let modelPregunta = {
                idPregunta: itemPregunta.IdPregunta,
                idEncuesta: IdEncuesta,
                IdentificadorTipoControl: idTipoControl
            };
            $.ajax({
                url: '@Url.Action("GetRespuestasByIdPregunta")',
                data: modelPregunta,
                type: 'GET',
                complete: function (Response) {
                    if (Response.responseJSON.Objects.length > 0) {
                        console.log(Response.responseJSON);//Preguntas y frecuencias junto a pregunta
                        var IdPregunta = Response.responseJSON.Objects[0].Preguntas.IdPregunta;
                        var Pregunta = Response.responseJSON.Objects[0].Preguntas.Pregunta;

                        var DivIdForPregunta = 'divForPregunta_' + IdPregunta;
                        //$('#mergeGraficoCaritas').append('<div id="' + DivIdForPregunta + '" class="mb-0" style="width: 100%;"></div>');
                        var divPadre = 'padreForIdPregunta_' + IdPregunta;
                        listDivsPregunta.push(divPadre);
                        $('#mergeAllExceptOpenAndCarita').append(
                            '<div class="col-lg-6 mb-3 container-graph" id="'+divPadre+'">' +
                            '<div id="" class="no-remove mb-3" style="width: 100%;">' +
                            '<div class="bg-white p-4">' +
                            '<p><strong>'+''+'</strong></p>' +
                            '<div class="row center-vertically"><div class="col-sm-4 col-md-4 col-xl-4" align="center"><div class="jumbotron p-2 mb-0 text-center">' +
                            '<h1 class="text-white">' + Response.responseJSON.Objects.length + '</h1>' +
                            '<p class="color mb-0">Respuestas</p></div></div>' +
                            '<div class="col-sm-8 col-md-8 col-xl-8">' +
                            '<div class="" id="' + DivIdForPregunta + '" style="width: 100%; height: auto;"></div>  <div class="' + DivIdForPregunta + '"></div>' +
                            '</div></div></div></div></div>'
                        );

                        var listRespuestas = ['Carita'];
                        var listFrecuencias = ['Frecuencias'];

                        var numBadFace = 0;
                        var numRegularFace = 0;
                        var numHappyFace = 0;
                        var numHappierFace = 0;
                        //happierface
                        //happyface
                        for (var i = 0; i < Response.responseJSON.Objects.length; i++) {
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == 'badface') {
                                numBadFace = numBadFace + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == 'regularface') {
                                numRegularFace = numRegularFace + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == 'happyface') {
                                numHappyFace = numHappyFace + 1;
                            }
                            if (Response.responseJSON.Objects[i].RespuestaUsuario == 'happierface') {
                                numHappierFace = numHappierFace + 1;
                            }
                        }
                        listFrecuencias.push(numBadFace);
                        listFrecuencias.push(numRegularFace);
                        listFrecuencias.push(numHappyFace);
                        listFrecuencias.push(numHappierFace);
                        listRespuestas.push('BadFace');
                        listRespuestas.push('RegularFace');
                        listRespuestas.push('HappyFace');
                        listRespuestas.push('HappierFace');


                        //FillGraphic--Descomentar lo siguiente
                        google.charts.load("current", { packages: ["corechart"] });
                        google.charts.setOnLoadCallback(drawChart);
                        function drawChart() {

                            var data = google.visualization.arrayToDataTable([
                                [listRespuestas[0], listFrecuencias[0]],
                                [listRespuestas[1], listFrecuencias[1]],
                                [listRespuestas[2], listFrecuencias[2]],
                                [listRespuestas[3], listFrecuencias[3]],
                                [listRespuestas[4], listFrecuencias[4]]
                            ]);

                            var options = {
                                title: Pregunta,
                                width: '100%',
                                height: 400,
                                bar: { groupWidth: '95%' },
                                legend: { position: 'none' },
                            };
                            var chart = new google.visualization.ColumnChart(document.getElementById(DivIdForPregunta));
                            chart.draw(data, options);

                        }
                        //End Fill
                        var json = [
                              { 'Respuesta': listRespuestas[1], 'Frecuencia': listFrecuencias[1] },
                              { 'Respuesta': listRespuestas[2], 'Frecuencia': listFrecuencias[2] },
                              { 'Respuesta': listRespuestas[3], 'Frecuencia': listFrecuencias[3] },
                              { 'Respuesta': listRespuestas[4], 'Frecuencia': listFrecuencias[4] },
                              { 'Respuesta': listRespuestas[5], 'Frecuencia': listFrecuencias[5] },
                              { 'Respuesta': listRespuestas[6], 'Frecuencia': listFrecuencias[6] },
                              { 'Respuesta': listRespuestas[7], 'Frecuencia': listFrecuencias[7] },
                              { 'Respuesta': listRespuestas[8], 'Frecuencia': listFrecuencias[8] },
                              { 'Respuesta': listRespuestas[9], 'Frecuencia': listFrecuencias[9] },
                              { 'Respuesta': listRespuestas[10], 'Frecuencia': listFrecuencias[10] },
                              { 'Respuesta': listRespuestas[11], 'Frecuencia': listFrecuencias[11] },
                              { 'Respuesta': listRespuestas[12], 'Frecuencia': listFrecuencias[12] },
                              { 'Respuesta': listRespuestas[13], 'Frecuencia': listFrecuencias[13] },
                              { 'Respuesta': listRespuestas[14], 'Frecuencia': listFrecuencias[14] },
                              { 'Respuesta': listRespuestas[15], 'Frecuencia': listFrecuencias[15] },
                        ]
                        ConvertJSONToCsv(json, Pregunta, Pregunta, divPadre);
                    }
                    else {

                    }
                }
            });
        }
            </script>
            <script>
        $("body").mousemove(function (e) {
            /*$.ajax({
                type: 'POST',
                data: 2, traditional: true,
                url: '/LoginAdmin/IsLogged',
                contentType: 'application/json; charset=utf-8',
                succes: function (Response) {
                    if (Response == "success") {
                        console.log('Sesion activa');
                    }
                    if (Response == "error") {
                        alert('Session expirada');
                    }

                },
                complete: function (Response) {
                    if (Response.responseJSON == "success") {
                        console.log('Sesion activa');
                    }
                    if (Response.responseJSON == "error") {
                        event.preventDefault();
                        swal({
                            title: "La session ha expirado, serás redireccionado al Login",
                            text: "",
                            type: "error",
                            icon: "error",
                            closeOnClickOutside: false,
                        }).then(function () {
                            window.location.href = "/LoginAdmin/Login";
                        });
                    }
                    if (Response.responseJSON == "successAndEmails") {
                        swal({
                            title: "El proceso de envío de email ha terminado. Presiona Ok para ver el estatus",
                            text: "",
                            type: "info",
                            icon: "info",
                            closeOnClickOutside: false,
                        }).then(function () {
                            window.location.href = "/Encuesta/successEmail/";
                        });
                    }
                    if (Response.responseJSON == "errorEmail") {
                        swal({
                            title: "El proceso de envío de email ha terminado. Presiona Ok para ver el estatus",
                            text: "",
                            type: "info",
                            icon: "info",
                            closeOnClickOutside: false,
                        }).then(function () {
                            window.location.href = "/Encuesta/errorEmail/";
                        });
                    }
                }
            });*/
        });
            </script>
            <script>
        function ordenar() {
            var listaordenada = listDivsPregunta.sort();
            for (var i = 0; i < listaordenada.length; i++) {
                jQuery(jQuery("#" + listaordenada[i]).detach()).appendTo("#mergeAllExceptOpenAndCarita");
            }
        }
        $('body').mousemove(function () {
            ordenar();
        })
        function numerarPreguntas() {
            var t1 = document.getElementsByClassName('container-graph');
            for (var i = 0; i < t1.length; i++) {
                if (t1[i].getElementsByTagName('svg').length > 0) {
                    //alert('Tiene grafico');

                }
                else {
                    //alert('No hay grafico');
                    $('#' + t1[i].id).hide();
                }
            }
            var listaordenada = listDivsPregunta.sort();
            var newList = [];
            for (var i = 0; i < listaordenada.length; i++) {
                var visible = $('#' + listaordenada[i]).css('display');
                if (visible != 'none') {
                    newList.push(listaordenada[i]);
                }
            }
            var numeral = 0;
            for (var i = 0; i < newList.length; i++) {
                numeral = i + 1;
                var idforAppend = newList[i].split('_')[1];
                //$('#divForPregunta_' + idforAppend).append('<p>Pregunta ' + numeral + '</p>');
                $('#padreForIdPregunta_' + idforAppend).prepend('<h2 class="numeracionP">Pregunta ' + numeral + '</h2>');
            }
        }
        function updateNumerarPreguntas() {
            var t1 = document.getElementsByClassName('container-graph');
            for (var i = 0; i < t1.length; i++) {
                if (t1[i].getElementsByTagName('svg').length > 0) {
                    //alert('Tiene grafico');

                }
                else {
                    //alert('No hay grafico');
                    $('#' + t1[i].id).hide();
                }
            }
            var listaordenada = listDivsPregunta.sort();
            var newList = [];
            for (var i = 0; i < listaordenada.length; i++) {
                var visible = $('#' + listaordenada[i]).css('display');
                if (visible != 'none') {
                    newList.push(listaordenada[i]);
                }
            }
            var numeral = 0;
            for (var i = 0; i < newList.length; i++) {
                numeral = i + 1;
                var idforAppend = newList[i].split('_')[1];
                //$('#divForPregunta_' + idforAppend).append('<p>Pregunta ' + numeral + '</p>');
                var item = $('#padreForIdPregunta_' + idforAppend).find('.numeracionP');
                if (item.length > 0) {
                    item[0].innerHTML = 'Pregunta ' + numeral + '';
                }
                else {
                    $('#padreForIdPregunta_' + idforAppend).prepend('<h2 class="numeracionP">Pregunta ' + numeral + '</h2>');
                }
            }
        }
            </script>
            <style>
                .tooltip {
                    opacity: 1 !important;
                }
                /* Tooltip container */
                .tooltip {
                    position: relative;
                }

                    /* Tooltip text */
                    .tooltip .tooltiptext {
                        visibility: hidden;
                        width: 200px;
                        background-color: black;
                        color: #fff;
                        text-align: center;
                        padding: 5px 0;
                        border-radius: 6px;
                        /* Position the tooltip text - see examples below! */
                        position: absolute;
                        z-index: 1;
                    }

                    /* Show the tooltip text when you mouse over the tooltip container */
                    .tooltip:hover .tooltiptext {
                        visibility: visible;
                    }

                .jumbotron {
                    background-color: #111657;
                }
            </style>
            <script src="~/scripts/CreateGraphics.js"></script>
            <script>
        function ConvertJSONToCsv(JSONData, fileName, ShowLabel, divToMerge) {
            //JSONData = JSONData.trim();
            if (fileName == null || fileName == '') {
                fileName = 'My export';
            }

            if (ShowLabel == null || ShowLabel == '') {
                ShowLabel = true;
            }

            try {
                var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;
                var CSV = '';
                if (ShowLabel) {
                    var row = "";
                    try {
                        for (var index in arrData[0]) {
                            row += index + ',';
                        }
                    } catch (e) {
                        //alert(ShowLabel);
                        console.log(arrData);
                    }
                    row = row.slice(0, -1);
                    CSV += row + '\r\n';
                }
                for (var i = 0; i < arrData.length; i++) {
                    var row = "";
                    for (var index in arrData[i]) {
                        //var arrValue = arrData[i][index] == null ? "" : '="' + arrData[i][index] + '"';
                        var arrValue = arrData[i][index] == null ? "" : '"' + arrData[i][index] + '"';
                        row += arrValue + ',';
                    }
                    row.slice(0, row.length - 1);
                    CSV += row + '\r\n';
                }
                if (CSV == '') {
                    growl.error("Invalid data");
                    return;
                }
            } catch (e) {

            }

            // Edge or IE
            if (navigator.appVersion.indexOf("Win") != -1 && (navigator.userAgent.match(/msie/i) || navigator.userAgent.match(/trident/i)) || window.navigator.userAgent.indexOf("Edge") > -1) {
                var blob = new Blob([CSV]);
                if (window.navigator.msSaveOrOpenBlob)
                    window.navigator.msSaveBlob(blob, fileName + ".csv");

            } else {
                //Mozilla Firefox or Chrome
                var uri = 'data:application/csv;charset=utf-8,' + escape(CSV);
                var Link = document.createElement("a");
                Link.innerHTML = '<button data-title="Descarga los datos del gráfico" class="btn btn-secondary btn-action ml-2">Descarga <i class="fas fa-download"></i></button>';
                Link.className = ''
                Link.href = uri;
                Link.download = fileName + ".csv";
                //padreForIdPregunta_4006
                if (typeof (divToMerge) == 'string') {
                    var idPreg = divToMerge.split('_')[1];
                    $('#' + divToMerge).append(Link);
                    $('#' + divToMerge).append('<button onclick="updateGraphic(' + idPreg +')" data-title="Actualiza el contenido del gráfico" class="btn btn-secondary btn-action ml-1">Actualizar <i class="fas fa-sync"></i></button>');
                }
                else {
                    $('#padreForIdPregunta_' + divToMerge).append(Link);
                    $('#padreForIdPregunta_' + divToMerge).append('<button onclick="updateGraphic(' + divToMerge + ')" data-title="Actualiza el contenido del gráfico" class="btn btn-secondary btn-action ml-1">Actualizar <i class="fas fa-sync"></i></button>');
                }
                //Link.click();padreForIdPregunta_1807
                //document.body.removeChild(Link);
            }
        }
        function updateGraphic(IdPreg) {
            var divToFind = 'padreForIdPregunta_' + IdPreg;
            var save = $('#' + divToFind + '').find('.no-remove');
            $('#padreForIdPregunta_' + IdPreg).empty();
            $('#padreForIdPregunta_' + IdPreg).empty().append(save[0]);
            try {
                $('#' + save[0].id).empty();
            } catch (e) {

            }
            $('#divForPregunta_' + IdPreg).append('<img id="loadImage" src="https://i.pinimg.com/originals/ec/d6/bc/ecd6bc09da634e4e2efa16b571618a22.gif" style="width:200px; height:200px">');
            var IdEncuesta = @Model.IdEncuesta;
            var IdPregunta = IdPreg;
            var Id_TipoControl = 0;
            var getTipoControl = $.ajax({
                url: '@Url.Action("GetTipoControl", "ReporteD4U")',
                data: { idPregunta: IdPregunta },
                complete: function (val) {
                    if (val.responseJSON != 'error') {
                        Id_TipoControl = val.responseJSON.IdTipoControl;
                        let modelGraph = {
                            idPregunta: IdPregunta,
                            IdentificadorTipoControl: Id_TipoControl,
                            idEncuesta: IdEncuesta
                        }
                        //Case a cada funcion
                        switch (Id_TipoControl) {
                            case 1:
                                graphicOpenAnswers(modelGraph);//Respuesta corta OK
                                break;
                            case 2:
                                graphicOpenAnswers(modelGraph);//Respuesta larga OK
                                break;
                            case 3:
                                graphicCake(modelGraph);//CheckBox OK
                                break;
                            case 4:
                                graphicCake(modelGraph);//RadioButton OK
                                break;
                            case 5:
                                graphicBarrasVertical(modelGraph);//Select OK
                                break;
                            case 6:
                                graphicBarrasFaceFeel(modelGraph);//Sentimiento OK
                                break;
                            case 7:
                                graphicBarrasVertical(modelGraph);//Rango OK
                                break;
                            case 13:
                                $('#padreForIdPregunta_' + IdPreg).remove();
                                graphicBarrasHorizontal(modelGraph)
                                break;
                            default:
                                break;
                        }
                        //Falta Likert
                    }
                    else {
                        swal('Algo ha salido mal al intentar actualizar el gráfico, por favor intenta más tarde', '', 'info');
                    }
                }
            });
        }
            </script>
            <style>
                [data-title] {
                    /*outline: red dotted 1px;*/ /*optional styling*/
                    /*font-size: 30px;*/ /*optional styling*/
                    position: relative;
                    cursor: help;
                }

                    [data-title]:hover::before {
                        content: attr(data-title);
                        position: absolute;
                        bottom: -26px;
                        display: inline-block;
                        padding: 3px 6px;
                        border-radius: 2px;
                        background: #000;
                        color: #fff;
                        font-size: 12px;
                        font-family: sans-serif;
                        white-space: nowrap;
                    }

                    [data-title]:hover::after {
                        content: '';
                        position: absolute;
                        bottom: -10px;
                        left: 8px;
                        display: inline-block;
                        color: #fff;
                        border: 8px solid transparent;
                        border-bottom: 8px solid #000;
                    }
            </style>
            <script>
        //Likert
        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(CreateGraphic);
        function CreateGraphic(dataForGraphics, SubSeccion, Pregunta) {
            var data = null;
            var long = 0;
            try {
                long = dataForGraphics.length;
            } catch (e) {

            }
            var arrayDataForGraphics = CreateDataArray(dataForGraphics, long);

            if (arrayDataForGraphics == null) {
                //$('#' + DivIdForPregunta).append('<h3>Aún no existen respuestas en la pregunta de tipo Likert para mostrar el gráfico</h3>');
            }
            var options = {
                width: '100%',
                height: 400,
                legend: { position: 'top', maxLines: 3 },
                bar: { groupWidth: '75%' },
                isStacked: true,
            };
            var chart = new google.visualization.BarChart(document.getElementById('padreForIdPregunta_' + SubSeccion));
            if (long > 0) {
                chart.draw(arrayDataForGraphics, options);
            }
            ConvertJSONToCsv(dataForGraphics, Pregunta, Pregunta, SubSeccion);
        }

        /**/

        //Select
        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(CreateGraphicsSelect);
        function CreateGraphicsSelect(dataForGraphics, SubSeccion, Pregunta) {
            var options = {
                title: Pregunta,
                legend: { position: 'none' }
            };
            var chart = new google.visualization.Histogram(document.getElementById(SubSeccion));
            chart.draw(dataForGraphics, options);
        }//EndDrawChart

        /**/

        //Radio y Check
        //Select
        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(CreateGraphicsRB);
        function CreateGraphicsRB(dataForGraphics, SubSeccion, Pregunta) {
            var options = {
                title: Pregunta,
                pieHole: 0.4,
            };
            var chart = new google.visualization.PieChart(document.getElementById(SubSeccion));
            chart.draw(dataForGraphics, options);
        }//EndDrawChart
            </script>
        </body>
    }
    else
    {
        /* Pagina de error */
        <body>
            <main id="wrapper">
                <div id="top-bar">
                    <div class="container-fluid px-lg-5">
                        <div class="row">
                            <div class="col-4 col-sm-5 col-md-5">
                                <img src="~/img/logo.png" class="logo-header" alt="Logo" onclick="">
                            </div>
                            <div style="display: none">
                                @*@RenderSection("H1", false)
                                    @RenderSection("Header", false)*@
                            </div>

                            <div class="col-8 col-sm-7 col-md-7">
                                <div class="user-info">
                                    <span class="color">Hola</span>
                                    <img src="~/img/icon-user-male.jpg" class="avatar-header" width="50" height="50" alt="Avatar">
                                </div><!--.user-info-->
                            </div>
                        </div><!--.row-->
                    </div><!--.container-fluid-->
                </div>
                <section id="content">
                    <div class="content-wrap">
                        <div class="container-fluid px-lg-5">
                            <div class="row">
                                <div class="col-lg-8">
                                    <div hidden class="col-md-6 col-sm-12 col-xs-6 col-6">
                                        <h2>Ooops ha ocurrido un error</h2>
                                    </div>
                                    <div class="col-md-6 col-sm-12 col-xs-6 col-6">
                                        <h2>Ooops ha ocurrido un error :(</h2>
                                        <p>Accede nuevamente</p>
                                        <p><a id="urlLogn" href="">Login de usuario</a></p>
                                    </div>
                                    <div class="col-md-6 col-sm-12 col-xs-6 col-6">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
            <footer id="footer" style="bottom: 0; position: fixed;">
                <div class="container-fluid px-lg-5">
                    <div class="row">
                        <div class="col-6">
                            <p class="copyrights"><span class="color">DIAGNOSTIC 4U</span>  @DateTime.Now.Year</p>
                        </div>
                        <div class="col-6">
                            <p class="text-support"><i class="far fa-life-ring"></i> SOPORTE</p>
                        </div>
                    </div>
                </div>
            </footer>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
            <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
            <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
            <script>
var redirect = "http://" + window.location.href.split('/')[2] + "/LoginAdmin/Login";
try {
var elem = document.getElementById("urlLogn").href = redirect;
} catch (e) {

}
swal("Tu sesión ha expirado, serás redireccionado al Login", "", "info").then(function () {
var elem = document.getElementById("urlLogn").click();
});
            </script>
        </body>
    }
}


</html>